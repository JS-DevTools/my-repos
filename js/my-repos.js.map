{
  "version": 3,
  "sources": [
    "..\\node_modules\\browser-pack\\_prelude.js",
    "..\\_ts\\api-client.ts",
    "..\\_ts\\components\\account-item.tsx",
    "..\\_ts\\components\\account-list.tsx",
    "..\\_ts\\components\\add-account.tsx",
    "..\\_ts\\components\\app.tsx",
    "..\\_ts\\components\\first-time.tsx",
    "..\\_ts\\components\\options.tsx",
    "..\\_ts\\components\\page-header.tsx",
    "..\\_ts\\components\\repo-list.tsx",
    "..\\_ts\\github\\github-account.ts",
    "..\\_ts\\github\\github-repo.ts",
    "..\\_ts\\github\\github.ts",
    "..\\_ts\\github\\index.ts",
    "..\\_ts\\index.tsx",
    "..\\_ts\\state-store\\app-state.ts",
    "..\\_ts\\state-store\\fetch-github-account.ts",
    "..\\_ts\\state-store\\hash.ts",
    "..\\_ts\\state-store\\index.ts",
    "..\\_ts\\state-store\\state-store.ts",
    "..\\_ts\\util.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import { stateStore } from \"./state-store\";\nimport { LOCAL_DEV_MODE, mapToPOJO, random } from \"./util\";\n\ninterface JsonPojo {\n  [key: string]: string | number | boolean | JsonPojo | JsonPojo[];\n}\n\nexport type Fetch = (input: RequestInfo, init?: RequestInit) => Promise<Response>;\n\nexport type ParsedResponseBody = string | JsonPojo | JsonPojo[] | undefined;\n\nexport type CachedResponse = ResponseInit & { body: string };\n\n/**\n * A wrapper around the Fetch API, with added error handling and automatic response parsing.\n */\nexport class ApiClient {\n  /**\n   * Returns the parsed response, or throws an error if an error response is returned\n   */\n  public async fetch(input: RequestInfo, init?: RequestInit): Promise<ParsedResponseBody> {\n    let [response] = await Promise.all([\n      await fetchWithFallback(input, init),\n      artificialDelay(),\n    ]);\n\n    // Parse the response, even if it's an error, since the body may contain error details\n    let parsedResponseBody = await parseResponseBody(response);\n\n    if (!response.ok) {\n      throw this.createError(\n        `${getUrl(input)} returned an HTTP ${response.status} (${response.statusText || \"Error\"}) response`,\n        parsedResponseBody\n      );\n    }\n\n    await cacheResponse(input, response);\n    return parsedResponseBody;\n  }\n\n  /**\n   * Returns the parsed response if it's a valid JSON array; otherwise, or throws an error.\n   */\n  public async fetchArray(input: RequestInfo, init?: RequestInit): Promise<JsonPojo[]> {\n    let parsedResponseBody = await this.fetch(input, init);\n\n    if (!Array.isArray(parsedResponseBody)) {\n      throw this.createError(\n        `${getUrl(input)} did not return a JSON array as expected`,\n        parsedResponseBody\n      );\n    }\n\n    return parsedResponseBody;\n  }\n\n  /**\n   * Returns the parsed response if it's a valid JSON object; otherwise, or throws an error.\n   */\n  public async fetchObject(input: RequestInfo, init?: RequestInit): Promise<JsonPojo> {\n    let parsedResponseBody = await this.fetch(input, init);\n\n    if (typeof parsedResponseBody !== \"object\") {\n      throw this.createError(\n        `${getUrl(input)} did not return a JSON object as expected`,\n        parsedResponseBody\n      );\n    }\n    else if (Array.isArray(parsedResponseBody)) {\n      throw this.createError(\n        `${getUrl(input)} returned a JSON array, but a JSON object was expected`,\n        parsedResponseBody\n      );\n    }\n\n    return parsedResponseBody;\n  }\n\n  /**\n   * Creates an Error with the specified message, including the parsed response body\n   */\n  public createError(message: string, parsedResponseBody: ParsedResponseBody): Error {\n    return new Error(message + \"\\n\" + JSON.stringify(parsedResponseBody, undefined, 2));\n  }\n}\n\n\n/**\n * Fetches the requested HTTP resource, but falls-back to a previously-cached copy\n * from LocalStorage, if necessary.\n */\nasync function fetchWithFallback(input: RequestInfo, init?: RequestInit): Promise<Response> {\n  let primary: Fetch, secondary: Fetch;\n\n  if (LOCAL_DEV_MODE) {\n    // For local development, default to LocalStorage to avoid hitting API rate limits\n    primary = fetchFromCache;\n    secondary = fetch;\n  }\n  else {\n    // In production, hit the API first, but fallback to LocalStorage if necessary\n    primary = fetch;\n    secondary = fetchFromCache;\n  }\n\n  let response = await primary(input, init);\n\n  if (response.ok) {\n    return response;\n  }\n  else {\n    return secondary(input, init);\n  }\n}\n\n/**\n * Fetches the requested resource from LocalStorage cache\n */\nasync function fetchFromCache(input: RequestInfo): Promise<Response> {\n  // Default response (for a cache miss)\n  let responsePOJO: CachedResponse = {\n    status: 503,\n    statusText: \"Service Unavailable\",\n    headers: {\n      \"Content-Type\": \"text/plain\",\n      \"Content-Length\": \"0\",\n    },\n    body: \"\",\n  };\n\n  // See if we have a cached response for this resource\n  let cache = localStorage.getItem(getUrl(input));\n  if (cache) {\n    try {\n      responsePOJO = JSON.parse(cache) as CachedResponse;\n    }\n    catch (error) {\n      responsePOJO.body = (error as Error).message;\n    }\n  }\n\n  // Convert the response POJO into a real Fetch Response\n  return new Response(responsePOJO.body, responsePOJO);\n}\n\n/**\n * Caches the given response for the specified HTTP resource\n */\nasync function cacheResponse(input: RequestInfo, response: Response) {\n  // Convert the response to a POJO that can be cached\n  let responsePOJO: CachedResponse = {\n    status: response.status,\n    statusText: response.statusText,\n    headers: mapToPOJO(response.headers as any),   // tslint:disable-line:no-any\n    body: await response.clone().text(),\n  };\n\n  // Cache the response POJO as JSON in LocalStorage\n  localStorage.setItem(getUrl(input), JSON.stringify(responsePOJO, undefined, 2));\n}\n\n/**\n * Returns the URL from the given RequestInfo value\n */\nfunction getUrl(input: RequestInfo): string {\n  return typeof input === \"string\" ? input : input.url;\n}\n\n/**\n * Tries to parse the response as JSON, but falls back to text if that fails\n */\nasync function parseResponseBody(response: Response): Promise<ParsedResponseBody> {\n  let responseBody: string;\n\n  try {\n    responseBody = await response.clone().text();\n  }\n  catch (error) {\n    // The response could not be read\n    return undefined;\n  }\n\n  try {\n    // Try to parse the response as JSON\n    let parsedResponseBody = JSON.parse(responseBody) as ParsedResponseBody;\n\n    if (typeof parsedResponseBody === \"object\") {\n      // Return the parsed object or array\n      return parsedResponseBody;\n    }\n    else {\n      // Coerce the result to a string\n      return String(parsedResponseBody);\n    }\n  }\n  catch (error) {\n    // The response couldn't be parsed as JSON, so just return it as a string\n    return responseBody;\n  }\n}\n\n/**\n * Introduces an artificial delay during local development.\n */\nasync function artificialDelay(): Promise<void> {\n  let milliseconds = 0;\n\n  if (stateStore.state.delay) {\n    milliseconds = random(0, stateStore.state.delay);\n  }\n\n  await new Promise<unknown>((resolve) => setTimeout(resolve, milliseconds));\n}\n",
    "import { GitHubAccount } from \"../github/github-account\";\nimport { RepoList } from \"./repo-list\";\n\ninterface AccountItemProps {\n  account: GitHubAccount;\n}\n\nexport function AccountItem(props: AccountItemProps) {\n  let { account } = props;\n\n  return (\n    <section key={account.login} className=\"account\">\n      <header>\n        <h1>\n          <a href={account.html_url}>\n            {account.avatar_url && <img src={account.avatar_url} className=\"avatar\" />}\n            {account.name}\n          </a>\n        </h1>\n      </header>\n      <AccountItemContents {...props} />\n    </section>\n  );\n}\n\nfunction AccountItemContents(props: AccountItemProps) {\n  let { account } = props;\n\n  if (account.repos.length > 0) {\n    return <RepoList account={account} />;\n  }\n  else if (account.error) {\n    return (\n      <div className=\"error\">\n        <div className=\"error-message\">{account.error}</div>\n      </div>\n    );\n  }\n  else if (account.loading) {\n    return (\n      <div className=\"loading\">\n        <div className=\"loading-message\">Loading...</div>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"no-repos\">\n        <div className=\"empty-message\">There are no repos to show</div>\n      </div>\n    );\n  }\n}\n",
    "import { stateStore } from \"../state-store\";\nimport { accountCountCssClass } from \"../util\";\nimport { AccountItem } from \"./account-item\";\n\nexport function AccountList() {\n  let { accounts } = stateStore.state;\n\n  return (\n    <main id=\"account_list\" className={accountCountCssClass(accounts)}>\n      <div className=\"responsive-container\">\n        {accounts.map((account) => <AccountItem account={account} />)}\n      </div>\n    </main>\n  );\n}\n",
    "import { ChangeEvent, FormEvent } from \"react\";\nimport { stateStore } from \"../state-store\";\n\nexport interface AddAccountProps {\n  submitButtonText?: string;\n}\n\ninterface State {\n  login: string;\n  busy: boolean;\n}\n\nexport class AddAccount extends React.Component<AddAccountProps, State> {\n  public readonly state: State = {\n    login: \"\",\n    busy: false,\n  };\n\n  public render() {\n    let { submitButtonText } = this.props;\n    let { login, busy } = this.state;\n\n    return (\n      <form className={`add-account form ${busy ? \"busy\" : \"\"}`} onSubmit={this.handleSubmit}>\n        <dl className=\"form-group\">\n          <dt className=\"input-label\">\n            <label htmlFor=\"repo_owner\">GitHub Username</label>\n          </dt>\n          <dd className=\"input-field\">\n            <input type=\"text\" name=\"account_name\" className=\"form-control short\"\n              maxLength={100} autoFocus autoCapitalize=\"off\" autoComplete=\"on\" spellCheck={false}\n              placeholder=\"GitHub Username\" disabled={busy}\n              value={login} onChange={this.handleChange} />\n          </dd>\n        </dl>\n\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={busy}>\n          {submitButtonText || \"Add\"}\n        </button>\n      </form>\n    );\n  }\n\n  private readonly handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ login: event.target.value });\n  }\n\n  private readonly handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.state.login) {\n      this.setState({ busy: true });\n      await stateStore.addAccount(this.state.login);\n      this.setState({ login: \"\", busy: false });\n    }\n  }\n}\n",
    "import { stateStore } from \"../state-store\";\nimport { ReadonlyAppState } from \"../state-store/app-state\";\nimport { AccountList } from \"./account-list\";\nimport { FirstTime } from \"./first-time\";\nimport { Options } from \"./options\";\nimport { PageHeader } from \"./page-header\";\n\nexport class App extends React.Component<{}, ReadonlyAppState> {\n  public readonly state: ReadonlyAppState;\n\n  public constructor(props: Readonly<{}>) {\n    super(props);\n\n    // Connect the StateStore with this app instance\n    this.state = stateStore.state;\n    stateStore.onStateChange((event) => this.setState(event.detail.state, event.detail.callback));  //tslint:disable-line:no-unbound-method\n  }\n\n  public render() {\n    return [\n      <PageHeader key=\"page_header\" />,\n      <Options key=\"options\" />,\n      <AccountList key=\"account_list\" />,\n      <FirstTime key=\"first_time\" />,\n    ];\n  }\n}\n",
    "import { stateStore } from \"../state-store\";\nimport { accountCountCssClass } from \"../util\";\nimport { AddAccount } from \"./add-account\";\n\nexport function FirstTime() {\n  let { accounts } = stateStore.state;\n\n  return (\n    <aside id=\"first_time\" className={accountCountCssClass(accounts)}>\n      <div className=\"responsive-container\">\n        <div className=\"welcome-message\">\n          <h3>Hi! 👋 Enter your GitHub username to get started</h3>\n          <AddAccount submitButtonText=\"Show My Repos\" />\n        </div>\n      </div>\n    </aside>\n  );\n}\n",
    "import { MouseEvent } from \"react\";\nimport { stateStore } from \"../state-store\";\n\nexport function Options() {\n  let { accounts, showForks, showArchived } = stateStore.state;\n  let hasForks = false, hasArchived = false;\n\n  for (let account of accounts) {\n    for (let repo of account.repos) {\n      hasForks = hasForks || repo.fork;\n      hasArchived = hasArchived || repo.archived;\n    }\n  }\n\n  if (!hasForks && !hasArchived) {\n    return null;  // tslint:disable-line:no-null-keyword\n  }\n\n  return (\n    <div className=\"responsive-container\">\n      <aside id=\"options\">\n        {\n          hasForks &&\n          <a id=\"toggle_forks\" href={`#forks=${showForks ? \"hide\" : \"show\"}`} onClick={handleOptionClick}>\n            {showForks ? \"hide\" : \"show\"} forks\n          </a>\n        }\n        {\n          hasArchived &&\n          <a id=\"toggle_archived\" href={`#archived=${showArchived ? \"hide\" : \"show\"}`} onClick={handleOptionClick}>\n            {showArchived ? \"hide\" : \"show\"} archived\n          </a>\n        }\n      </aside>\n    </div>\n  );\n}\n\n\nfunction handleOptionClick(event: MouseEvent) {\n  event.preventDefault();\n\n  switch (event.currentTarget.id) {\n    case \"toggle_forks\":\n      stateStore.setState({ showForks: !stateStore.state.showForks });\n      break;\n\n    case \"toggle_archived\":\n      stateStore.setState({ showArchived: !stateStore.state.showArchived });\n      break;\n  }\n}\n",
    "import { stateStore } from \"../state-store\";\nimport { accountCountCssClass } from \"../util\";\nimport { AddAccount } from \"./add-account\";\n\nexport function PageHeader() {\n  let { accounts } = stateStore.state;\n\n  return (\n    <header id=\"page_header\" className={accountCountCssClass(accounts)}>\n      <div className=\"responsive-container\">\n        <img className=\"logo\" src=\"img/logo.png\" alt=\"logo image\" />\n        <h1>My GitHub Repos</h1>\n        <h2>All your GitHub repos on one page</h2>\n\n        <AddAccount />\n      </div>\n    </header>\n  );\n}\n",
    "import { GitHubAccount } from \"../github/github-account\";\nimport { GitHubRepo } from \"../github/github-repo\";\nimport { stateStore } from \"../state-store\";\n\nexport interface RepoListProps {\n  account: GitHubAccount;\n}\n\nexport function RepoList(props: RepoListProps) {\n  let { account } = props;\n  let repos = account.repos.filter((repo) => !stateStore.isHidden(repo));\n\n  return (\n    <ul className=\"repo-list\">\n      {repos.map((repo) => <RepoItem repo={repo} {...props} />)}\n    </ul>\n  );\n}\n\ninterface RepoItemProps extends RepoListProps {\n  repo: GitHubRepo;\n}\n\nfunction RepoItem(props: RepoItemProps) {\n  let { repo } = props;\n\n  return (\n    <li key={repo.name} className={`repo ${repo.fork ? \"forked\" : \"\"} ${repo.archived ? \"archived\" : \"\"}`}>\n      <h2>\n        <a href={repo.html_url}>{repo.name}</a>\n      </h2>\n      {repo.description && <h3>{repo.description}</h3>}\n\n      <nav className=\"badges\">\n        <a href={`${repo.html_url}/network/members`}\n          className={`badge ${repo.forks_count ? \"badge-ok\" : \"\"} forks`}>\n          <i className=\"glyphicon glyphicon-cutlery\"></i>\n          <span className=\"badge-label\">Forks</span>\n          <span className=\"badge-count\">{repo.forks_count}</span>\n        </a>\n\n        <a href={`${repo.html_url}/stargazers`}\n          className={`badge ${repo.stargazers_count ? \"badge-ok\" : \"\"} stars`}>\n          <i className=\"glyphicon glyphicon-star\"></i>\n          <span className=\"badge-label\">Stars</span>\n          <span className=\"badge-count\">{repo.stargazers_count}</span>\n        </a>\n\n        <a href={`${repo.html_url}/watchers`}\n          className={`badge ${repo.watchers_count ? \"badge-ok\" : \"\"} watchers`}>\n          <i className=\"glyphicon glyphicon-eye-open\"></i>\n          <span className=\"badge-label\">Watchers</span>\n          <span className=\"badge-count\">{repo.watchers_count}</span>\n        </a>\n\n        <a href={`${repo.html_url}/issues`}\n          className={`badge ${repo.open_issues_count ? \"badge-warning\" : \"badge-ok\"} issues`}>\n          <i className=\"glyphicon glyphicon-fire\"></i>\n          <span className=\"badge-label\">Issues</span>\n          <span className=\"badge-count\">{repo.open_issues_count}</span>\n        </a>\n\n        {DependencyBadge(props)}\n      </nav>\n    </li>\n  );\n}\n\nfunction DependencyBadge(props: RepoItemProps) {\n  let { repo } = props;\n\n  let hasError: boolean;\n  let label: string;\n  let count: number;\n\n  if (repo.dependencies.out_of_date) {\n    hasError = true;\n    label = \"Out of Date\";\n    count = repo.dependencies.out_of_date;\n  }\n  else if (repo.dependencies.advisories) {\n    hasError = true;\n    label = \"Insecure\";\n    count = repo.dependencies.advisories;\n  }\n  else {\n    hasError = false;\n    label = \"Up-to-Date\";\n    count = repo.dependencies.up_to_date;\n  }\n\n  return (\n    <a href={repo.dependencies.html_url}\n      className={`badge ${hasError ? \"badge-error\" : \"badge-ok\"} dependencies`}>\n      <i className=\"glyphicon glyphicon-calendar\"></i>\n      <span className=\"badge-label\">{label}</span>\n      <span className=\"badge-count\">{`${count} / ${repo.dependencies.total}`}</span>\n    </a>\n  );\n}\n",
    "import { GitHubRepo } from \"./github-repo\";\n\n/**\n * A GitHub user or organization account, as returned from the GitHub REST API\n */\nexport interface GitHubAccountPOJO {\n  login: string;\n  name: string;\n  avatar_url: string;\n  bio: string;\n  html_url: string;\n}\n\n/**\n * Additional GitHub account properties that we need for this app\n */\nexport class GitHubAccount implements GitHubAccountPOJO {\n  public login = \"\";\n  public name = \"\";\n  public avatar_url = \"\";\n  public bio = \"\";\n  public html_url = \"\";\n\n  /**\n   * This account's GitHub repos\n   */\n  public repos: GitHubRepo[] = [];\n\n  /**\n   * Indicates whether we're currently fetching the account info from GitHub\n   */\n  public loading: boolean = false;\n\n  /**\n   * Indicates whether we've fetched the account info from GitHub\n   * - regardless of whether it succeeded or failed\n   */\n  public loaded: boolean = false;\n\n  /**\n   * If an error occurred while fetching account info, then this is the error message\n   */\n  public error?: string;\n\n  public constructor(props: Partial<GitHubAccount> = {}) {\n    Object.assign(this, props);\n  }\n}\n\n// tslint:disable:no-any no-unsafe-any\nexport function isGitHubAccountPOJO(account: any): account is GitHubAccountPOJO {\n  return typeof account === \"object\" &&\n    \"login\" in account && typeof account.login === \"string\" &&\n    \"name\" in account && typeof account.name === \"string\" &&\n    \"bio\" in account && typeof account.bio === \"string\" &&\n    \"avatar_url\" in account && typeof account.avatar_url === \"string\";\n}\n",
    "import { GitHubAccount } from \"./github-account\";\n\n/**\n * A GitHub repository, as returned from the GitHub REST API\n */\nexport interface GitHubRepoPOJO {\n  name: string;\n  full_name: string;\n  description: string;\n  archived: boolean;\n  fork: boolean;\n  forks_count: number;\n  stargazers_count: number;\n  watchers_count: number;\n  open_issues_count: number;\n  html_url: string;\n}\n\n/**\n * Additional GitHub repo properties that we need for this app\n */\nexport class GitHubRepo implements GitHubRepoPOJO {\n  public readonly account: GitHubAccount;\n  public name = \"\";\n  public full_name = \"\";\n  public description = \"\";\n  public archived = false;\n  public fork = false;\n  public forks_count = 0;\n  public stargazers_count = 0;\n  public watchers_count = 0;\n  public open_issues_count = 0;\n  public html_url = \"\";\n\n  // TEMPORARY\n  public dependencies = {\n    total: 0,\n    out_of_date: 0,\n    up_to_date: 0,\n    advisories: 0,\n    html_url: \"\",\n  };\n\n  public constructor(props: Partial<GitHubRepo>) {\n    if (!props.account) {\n      throw new Error(`No parent account was specified for GitHub repo \"${props.name}\"`);\n    }\n\n    this.account = props.account;\n    Object.assign(this, props);\n  }\n}\n\n// tslint:disable:no-any no-unsafe-any\nexport function isArrayOfGitHubRepoPOJO(repos: any[]): repos is GitHubRepoPOJO[] {\n  return repos.length > 0 &&\n    typeof repos[0] === \"object\" &&\n    typeof repos[0].name === \"string\";\n}\n",
    "import { ApiClient } from \"../api-client\";\nimport { GitHubAccount, isGitHubAccountPOJO } from \"./github-account\";\nimport { GitHubRepo, isArrayOfGitHubRepoPOJO } from \"./github-repo\";\n\nexport class GitHub {\n  private readonly _client: ApiClient = new ApiClient();\n\n  /**\n   * Fetches the specified GitHub account's info, NOT including its repos\n   */\n  public async fetchAccount(account: GitHubAccount): Promise<GitHubAccount> {\n    let accountPOJO = await this._client.fetchObject(`https://api.github.com/users/${account.login}`);\n\n    if (isGitHubAccountPOJO(accountPOJO)) {\n      return new GitHubAccount({\n        ...accountPOJO,\n        loading: false,\n        loaded: true,\n        repos: [],\n      });\n    }\n    else {\n      throw this._client.createError(\"Invalid GitHub account:\", accountPOJO);\n    }\n  }\n\n  /**\n   * Fetches the GitHub repos for the specified account\n   */\n  public async fetchRepos(account: GitHubAccount): Promise<GitHubRepo[]> {\n    let repoPOJOs = await this._client.fetchArray(`https://api.github.com/users/${account.login}/repos`);\n\n    if (isArrayOfGitHubRepoPOJO(repoPOJOs)) {\n      let repos: GitHubRepo[] = [];\n\n      for (let repoPOJO of repoPOJOs) {\n        repos.push(new GitHubRepo({ ...repoPOJO, account }));\n      }\n\n      return repos;\n    }\n    else {\n      throw this._client.createError(\"Invalid GitHub repo:\", repoPOJOs);\n    }\n  }\n}\n",
    "import { GitHub } from \"./github\";\n\n/**\n * Singleton instance of the GitHub API client\n */\nexport const github = new GitHub();\n",
    "import { App } from \"./components/app\";\n\nReactDOM.render(<App />, document.body);\n",
    "import { GitHubAccount } from \"../github/github-account\";\nimport { DEFAULT_DELAY } from \"../util\";\n\nexport interface ReadonlyAppState {\n  readonly accounts: ReadonlyArray<GitHubAccount>;\n  readonly hiddenRepos: ReadonlySet<string>;\n  readonly showForks: boolean;\n  readonly showArchived: boolean;\n  readonly delay: number;\n}\n\nexport class AppState implements ReadonlyAppState {\n  /**\n   * The GitHub accounts shown on the dashboard\n   */\n  public accounts: GitHubAccount[];\n\n  /**\n   * Specific repos to hide\n   */\n  public hiddenRepos: Set<string>;\n\n  /**\n   * Whether to show forked repos on the dashboard\n   */\n  public showForks: boolean;\n\n  /**\n   * Whether to show archived repos on the dashboard\n   */\n  public showArchived: boolean;\n\n  /**\n   * Delays AJAX responses by a number of milliseconds.\n   * This is mostly just used for local development, to simulate network latency.\n   */\n  public delay: number;\n\n  /**\n   * Creates a new AppState instance, optionally cloning an existing state\n   */\n  public constructor(props: Partial<ReadonlyAppState> = {}) {\n    this.accounts = props.accounts ? props.accounts.slice() : [];\n    this.hiddenRepos = props.hiddenRepos ? new Set(props.hiddenRepos) : new Set();\n    this.showForks = Boolean(props.showForks);\n    this.showArchived = Boolean(props.showArchived);\n    this.delay = props.delay || DEFAULT_DELAY;\n  }\n}\n",
    "import { github } from \"../github\";\nimport { GitHubAccount } from \"../github/github-account\";\n\n/**\n * Fetches the specified GitHub account and its repos, and then calls the given callback function\n * to update the app state.\n */\nexport async function fetchGitHubAccount(account: GitHubAccount, callback: (account: GitHubAccount) => void) {\n  // Fetch the GitHub account and repos at the same time\n  let safeResults = await Promise.all([\n    safeResolve(github.fetchAccount(account)),\n    safeResolve(github.fetchRepos(account)),\n  ]);\n\n  // @ts-ignore - This line totally confuses the TypeScript compiler\n  let [{ result: accountPOJO, error: accountError }, { result: repos, error: repoError }] = safeResults;\n\n  if (accountError) {\n    // An error occurred while fetching the account\n    account = new GitHubAccount({\n      ...account,\n      error: accountError.message,\n    });\n  }\n  else {\n    // We successfully fetched the GitHub account\n    account = new GitHubAccount(accountPOJO);\n\n    if (repoError) {\n      // An error occurred while fetching the repos, so add the error message to the account\n      account.error = repoError.message;\n    }\n    else {\n      // We successfully fetched the GitHub repos\n      account.repos = repos!;\n    }\n  }\n\n  callback(account);\n}\n\n\nasync function safeResolve<T>(promise: Promise<T>): Promise<{ result?: T; error?: Error }> {\n  let result: T | undefined;\n  let error: Error | undefined;\n\n  try {\n    result = await promise;\n  }\n  catch (err) {\n    error = err as Error;\n  }\n\n  return { result, error };\n}\n",
    "import { GitHubAccount } from \"../github/github-account\";\nimport { DEFAULT_DELAY, getLogin } from \"../util\";\nimport { AppState, ReadonlyAppState } from \"./app-state\";\n\n/**\n * Updates the URL hash to match the specified app state\n */\nexport function writeStateToHash(state: Partial<ReadonlyAppState>) {\n  let hash = stateToHash(state);\n  let currentHash = location.hash.substr(1);\n  if (hash !== currentHash) {\n    location.hash = hash;\n  }\n}\n\n/**\n * Returns an AppState instance that matches the current URL hash\n */\nexport function readStateFromHash(): AppState {\n  let hash = location.hash.substr(1);\n  let state = hashToState(hash);\n  return state;\n}\n\n/**\n * Determines whether the current URL hash matches the specified app state\n */\nexport function hashMatchesState(state: Partial<ReadonlyAppState>): boolean {\n  let actualHash = location.hash.substr(1);\n  let expectedHash = stateToHash(state);\n  return actualHash === expectedHash;\n}\n\n/**\n * Serializes the specified app state as a URL hash string\n */\nfunction stateToHash(state: Partial<ReadonlyAppState>): string {\n  let params = new URLSearchParams();\n\n  if (state.accounts && state.accounts.length > 0) {\n    params.append(\"u\", state.accounts.map(getLogin).join(\",\"));\n  }\n\n  if (state.hiddenRepos && state.hiddenRepos.size > 0) {\n    params.append(\"hide\", [...state.hiddenRepos].sort().join(\",\"));\n  }\n\n  if (state.showForks) {\n    params.append(\"forks\", \"yes\");\n  }\n\n  if (state.showArchived) {\n    params.append(\"archived\", \"yes\");\n  }\n\n  if (state.delay !== DEFAULT_DELAY) {\n    params.append(\"delay\", String(state.delay));\n  }\n\n  let hashString = params.toString();\n\n  // Don't encode common characters that are valid in the hash\n  hashString = hashString.replace(/%2C/g, \",\");\n  hashString = hashString.replace(/%2F/g, \"/\");\n\n  return hashString;\n}\n\n/**\n * Deserializes an AppState instance from the specified URL hash string\n */\nfunction hashToState(hash: string): AppState {\n  let params = new URLSearchParams(hash);\n  let state: AppState = {\n    accounts: parseAccounts(params.get(\"u\")),\n    hiddenRepos: parseStringSet(params.get(\"hide\")),\n    showForks: parseBoolean(params.get(\"forks\")),\n    showArchived: parseBoolean(params.get(\"archived\")),\n    delay: parsePositiveInteger(params.get(\"delay\"), DEFAULT_DELAY),\n  };\n  return state;\n}\n\n/**\n * Parses a comma-delimited string as an array of GitHub accounts\n */\nfunction parseAccounts(value: string | null): GitHubAccount[] {\n  let logins = parseStringSet(value);\n  let accounts: GitHubAccount[] = [];\n\n  for (let login of logins.values()) {\n    accounts.push(new GitHubAccount({\n      login,\n      name: login,\n    }));\n  }\n\n  return accounts;\n}\n\n/**\n * Parses a comma-delimited string as a Set of strings\n */\nfunction parseStringSet(value: string | null): Set<string> {\n  value = value ? value.trim() : \"\";\n  let set = new Set<string>();\n\n  if (value) {\n    let strings = value.split(\",\");\n    for (let string of strings) {\n      string = string.trim();\n      if (string.length > 0) {\n        set.add(string);\n      }\n    }\n  }\n\n  return set;\n}\n\n/**\n * Parses a boolean string\n */\nfunction parseBoolean(value: string | null, defaultValue = false): boolean {\n  value = value ? value.trim() : \"\";\n  let boolean = [\"yes\", \"true\", \"on\", \"ok\", \"show\"].includes(value.toLowerCase());\n  if (boolean === defaultValue) {\n    return defaultValue;\n  }\n  else {\n    return boolean;\n  }\n}\n\n/**\n * Parses a numeric string.  It can be a float or integer, positive or negative.\n */\nfunction parseNumber(value: string | null, defaultValue = 0): number {\n  value = value ? value.trim() : \"\";\n  let number = parseFloat(value);\n  if (isNaN(number) || number === defaultValue) {\n    return defaultValue;\n  }\n  else {\n    return number;\n  }\n}\n\n/**\n * Parses an integer string.  It can be positive or negative.\n */\nfunction parseInteger(value: string | null, defaultValue = 0): number {\n  value = value ? value.trim() : \"\";\n  let number = parseNumber(value, defaultValue);\n  number = Number.isSafeInteger(number) ? number : Math.round(number);\n  if (number === defaultValue) {\n    return defaultValue;\n  }\n  else {\n    return number;\n  }\n}\n\n/**\n * Parses a positive integer string.  It can be positive or zero.\n */\nfunction parsePositiveInteger(value: string | null, defaultValue = 0): number {\n  value = value ? value.trim() : \"\";\n  let number = parseInteger(value, defaultValue);\n  if (number < 0 || number === defaultValue) {\n    return defaultValue;\n  }\n  else {\n    return number;\n  }\n}\n",
    "import { StateStore } from \"./state-store\";\n\n/**\n * Singleton instance of the StateStore class\n */\nexport const stateStore = new StateStore();\n",
    "import { GitHubAccount } from \"../github/github-account\";\nimport { GitHubRepo } from \"../github/github-repo\";\nimport { AppState, ReadonlyAppState } from \"./app-state\";\nimport { fetchGitHubAccount } from \"./fetch-github-account\";\nimport { hashMatchesState, readStateFromHash, writeStateToHash } from \"./hash\";\n\nconst hashchange = \"hashchange\";\nconst statechange = \"statechange\";\n\ninterface StateChangeEventDetail {\n  state: Partial<ReadonlyAppState>;\n  callback(): void;\n}\n\nexport class StateStore extends EventTarget {\n  public readonly state: ReadonlyAppState = new AppState();\n\n  public constructor() {\n    super();\n\n    // Initialize the state from the URL hash\n    this.syncWithHash();\n\n    // Update the state whenever the hash changes\n    window.addEventListener(hashchange, () => this.syncWithHash());\n  }\n\n  /**\n   * Subscribes to the \"statechange\" event\n   */\n  public onStateChange(listener: (evt: CustomEvent<StateChangeEventDetail>) => void) {\n    this.addEventListener(statechange, listener);\n  }\n\n  /**\n   * Dispatches a \"statechange\" event\n   */\n  public setState(partialState: Partial<ReadonlyAppState>, callback?: () => void) {\n    Object.assign(this.state, partialState);\n\n    let stateChangeEvent = new CustomEvent<StateChangeEventDetail>(statechange, {\n      detail: {\n        state: this.state,\n        callback: () => {\n          writeStateToHash(this.state);\n          callback && callback(); //tslint:disable-line:no-void-expression\n        }\n      }\n    });\n\n    this.dispatchEvent(stateChangeEvent);\n  }\n\n  /**\n   * Updates the state to match the URL hash\n   */\n  public syncWithHash() {\n    if (hashMatchesState(this.state)) {\n      // The URL hash is already in-sync with the app state\n      return;\n    }\n\n    let hashState = readStateFromHash();\n\n    // Re-order the accounts to match the hash order\n    if (hashState.accounts) {\n      let hashAccounts = hashState.accounts;\n      hashState.accounts = [];\n\n      for (let hashAccount of hashAccounts) {\n        let account = this.getAccount(hashAccount.login);\n        if (account) {\n          hashState.accounts.push(account);\n        }\n        else {\n          // This is a newly-added account\n          hashState.accounts.push(hashAccount);\n\n          // Fetch the account info from GitHub\n          // tslint:disable-next-line:no-floating-promises\n          fetchGitHubAccount(hashAccount, (updated) => this.updateAccount(updated));\n        }\n      }\n    }\n\n    this.setState(hashState);\n  }\n\n  /**\n   * Determines whether the specified account already exists\n   */\n  public hasAccount(login: string | GitHubAccount): boolean {\n    if (typeof login === \"object\") {\n      login = login.login;\n    }\n\n    return Boolean(this.getAccount(login));\n  }\n\n  /**\n   * Returns the account with the specified login\n   */\n  public getAccount(login: string) {\n    return this.state.accounts.find(byLogin(login));\n  }\n\n  /**\n   * Adds a new GitHub account with the specified login to the accounts list,\n   * and asynchronously fetches the account info from GitHub\n   */\n  public async addAccount(login: string) {\n    login = login.trim();\n\n    if (this.hasAccount(login)) {\n      // The account already exists\n      return;\n    }\n\n    let account = new GitHubAccount({\n      login,\n      name: login,\n      loading: true,\n    });\n\n    // Add this account\n    let accounts = this.state.accounts.slice();\n    accounts.push(account);\n    this.setState({ accounts });\n\n    // Fetch the account info from GitHub\n    await fetchGitHubAccount(account, (updated) => this.updateAccount(updated));\n  }\n\n  /**\n   * Removes the specified GitHub account from the accounts list\n   */\n  public updateAccount(account: GitHubAccount) {\n    let accounts = this.state.accounts.slice();\n    let index = accounts.findIndex(byLogin(account.login));\n\n    if (index >= 0) {\n      accounts.splice(index, 1, account);\n      this.setState({ accounts });\n    }\n  }\n\n  /**\n   * Removes the specified GitHub account from the accounts list\n   */\n  public removeAccount(account: GitHubAccount) {\n    let accounts = this.state.accounts.slice();\n    let index = accounts.findIndex(byLogin(account.login));\n\n    if (index >= 0) {\n      accounts.splice(index, 1);\n      this.setState({ accounts });\n    }\n  }\n\n  /**\n   * Adds or removes the specified GitHub repo from the `hiddenRepos` list\n   */\n  public toggleHidden(repo: GitHubRepo, hidden: boolean) {\n    let hiddenRepos = new Set(this.state.hiddenRepos);\n    if (hidden) {\n      hiddenRepos.add(repo.full_name);\n    }\n    else {\n      hiddenRepos.delete(repo.full_name);\n    }\n    this.setState({ hiddenRepos });\n  }\n\n  /**\n   * Determines whether the GitHub Repo is current hidden\n   */\n  public isHidden(repo: GitHubRepo): boolean {\n    if (this.state.hiddenRepos.has(repo.full_name)) {\n      // This repo has been explicitly hidden\n      return true;\n    }\n\n    if (repo.fork && !this.state.showForks) {\n      // Don't show forked repos\n      return true;\n    }\n\n    if (repo.archived && !this.state.showArchived) {\n      // Don't show archived repos\n      return true;\n    }\n\n    return false;\n  }\n}\n\n\n/**\n * Used to find GitHub accounts by their \"login\" property\n */\nfunction byLogin(login: string) {\n  login = login.trim().toLowerCase();\n  return (obj: { login: string }) => obj.login.trim().toLowerCase() === login;\n}\n",
    "// When running on localhost, we introduce artificial delays\n// and use LocalStorage instead of Fetch, to avoid rate limits\nexport const LOCAL_DEV_MODE = location.hostname === \"localhost\";\n\n// The default delay, based on whether we're in \"local dev\" mode\nexport const DEFAULT_DELAY = LOCAL_DEV_MODE ? 1000 : 0;\n\nexport interface POJOof<T> {\n  [key: string]: T;\n}\n\nexport interface POJO extends POJOof<unknown> { }\n\n/**\n * Converts a Map-like object to a POJO with string keys\n */\nexport function mapToPOJO<K, V>(map: Map<K, V>): POJOof<V> {\n  let pojo = {} as POJOof<V>;\n\n  for (let [key, value] of map.entries()) {\n    pojo[key.toString()] = value;\n  }\n\n  return pojo;\n}\n\n/**\n * Returns a random number between min and max, inclusive.\n */\nexport function random(min: number, max: number): number {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Returns a CSS class string that indicates the number of accounts.\n */\nexport function accountCountCssClass(accounts: ReadonlyArray<unknown>): string {\n  switch (accounts.length) {\n    case 0:\n      return \"no-accounts\";\n    case 1:\n      return \"has-accounts has-one-account\";\n    default:\n      return \"has-accounts has-multiple-accounts\";\n  }\n}\n\n/**\n * Returns the `login` property of the given object\n */\nexport function getLogin(obj: { login: string }): string {\n  return obj.login;\n}\n"
  ]
}