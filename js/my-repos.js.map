{
  "version": 3,
  "sources": [
    "..\\node_modules\\browser-pack\\_prelude.js",
    "..\\_ts\\api-client.ts",
    "..\\_ts\\components\\account-list\\account-item.tsx",
    "..\\_ts\\components\\account-list\\account-list.tsx",
    "..\\_ts\\components\\add-account\\add-account.tsx",
    "..\\_ts\\components\\app\\app.tsx",
    "..\\_ts\\components\\app\\fetch-github-account.ts",
    "..\\_ts\\components\\app\\state-store.ts",
    "..\\_ts\\components\\first-time\\first-time.tsx",
    "..\\_ts\\components\\page-header\\page-header.tsx",
    "..\\_ts\\components\\repo-list\\repo-list.tsx",
    "..\\_ts\\github.ts",
    "..\\_ts\\hash.ts",
    "..\\_ts\\index.tsx",
    "..\\_ts\\util.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import { hash } from \"./hash\";\nimport { LOCAL_DEV_MODE, mapToPOJO, random } from \"./util\";\n\ninterface JsonPojo {\n  [key: string]: string | number | boolean | JsonPojo | JsonPojo[];\n}\n\nexport type Fetch = (input: RequestInfo, init?: RequestInit) => Promise<Response>;\n\nexport type ParsedResponseBody = string | JsonPojo | JsonPojo[] | undefined;\n\nexport type CachedResponse = ResponseInit & { body: string };\n\n/**\n * A wrapper around the Fetch API, with added error handling and automatic response parsing.\n */\nexport class ApiClient {\n  /**\n   * Returns the parsed response, or throws an error if an error response is returned\n   */\n  public async fetch(input: RequestInfo, init?: RequestInit): Promise<ParsedResponseBody> {\n    let [response] = await Promise.all([\n      await fetchWithFallback(input, init),\n      artificialDelay(),\n    ]);\n\n    // Parse the response, even if it's an error, since the body may contain error details\n    let parsedResponseBody = await parseResponseBody(response);\n\n    if (!response.ok) {\n      throw this.createError(\n        `${getUrl(input)} returned an HTTP ${response.status} (${response.statusText || \"Error\"}) response`,\n        parsedResponseBody\n      );\n    }\n\n    await cacheResponse(input, response);\n    return parsedResponseBody;\n  }\n\n  /**\n   * Returns the parsed response if it's a valid JSON array; otherwise, or throws an error.\n   */\n  public async fetchArray(input: RequestInfo, init?: RequestInit): Promise<JsonPojo[]> {\n    let parsedResponseBody = await this.fetch(input, init);\n\n    if (!Array.isArray(parsedResponseBody)) {\n      throw this.createError(\n        `${getUrl(input)} did not return a JSON array as expected`,\n        parsedResponseBody\n      );\n    }\n\n    return parsedResponseBody;\n  }\n\n  /**\n   * Returns the parsed response if it's a valid JSON object; otherwise, or throws an error.\n   */\n  public async fetchObject(input: RequestInfo, init?: RequestInit): Promise<JsonPojo> {\n    let parsedResponseBody = await this.fetch(input, init);\n\n    if (typeof parsedResponseBody !== \"object\") {\n      throw this.createError(\n        `${getUrl(input)} did not return a JSON object as expected`,\n        parsedResponseBody\n      );\n    }\n    else if (Array.isArray(parsedResponseBody)) {\n      throw this.createError(\n        `${getUrl(input)} returned a JSON array, but a JSON object was expected`,\n        parsedResponseBody\n      );\n    }\n\n    return parsedResponseBody;\n  }\n\n  /**\n   * Creates an Error with the specified message, including the parsed response body\n   */\n  public createError(message: string, parsedResponseBody: ParsedResponseBody): Error {\n    return new Error(message + \"\\n\" + JSON.stringify(parsedResponseBody, undefined, 2));\n  }\n}\n\n\n/**\n * Fetches the requested HTTP resource, but falls-back to a previously-cached copy\n * from LocalStorage, if necessary.\n */\nasync function fetchWithFallback(input: RequestInfo, init?: RequestInit): Promise<Response> {\n  let primary: Fetch, secondary: Fetch;\n\n  if (LOCAL_DEV_MODE) {\n    // For local development, default to LocalStorage to avoid hitting API rate limits\n    primary = fetchFromCache;\n    secondary = fetch;\n  }\n  else {\n    // In production, hit the API first, but fallback to LocalStorage if necessary\n    primary = fetch;\n    secondary = fetchFromCache;\n  }\n\n  let response = await primary(input, init);\n\n  if (response.ok) {\n    return response;\n  }\n  else {\n    return secondary(input, init);\n  }\n}\n\n/**\n * Fetches the requested resource from LocalStorage cache\n */\nasync function fetchFromCache(input: RequestInfo): Promise<Response> {\n  // Default response (for a cache miss)\n  let responsePOJO: CachedResponse = {\n    status: 503,\n    statusText: \"Service Unavailable\",\n    headers: {\n      \"Content-Type\": \"text/plain\",\n      \"Content-Length\": \"0\",\n    },\n    body: \"\",\n  };\n\n  // See if we have a cached response for this resource\n  let cache = localStorage.getItem(getUrl(input));\n  if (cache) {\n    try {\n      responsePOJO = JSON.parse(cache) as CachedResponse;\n    }\n    catch (error) {\n      responsePOJO.body = (error as Error).message;\n    }\n  }\n\n  // Convert the response POJO into a real Fetch Response\n  return new Response(responsePOJO.body, responsePOJO);\n}\n\n/**\n * Caches the given response for the specified HTTP resource\n */\nasync function cacheResponse(input: RequestInfo, response: Response) {\n  // Convert the response to a POJO that can be cached\n  let responsePOJO: CachedResponse = {\n    status: response.status,\n    statusText: response.statusText,\n    headers: mapToPOJO(response.headers as any),   // tslint:disable-line:no-any\n    body: await response.clone().text(),\n  };\n\n  // Cache the response POJO as JSON in LocalStorage\n  localStorage.setItem(getUrl(input), JSON.stringify(responsePOJO, undefined, 2));\n}\n\n/**\n * Returns the URL from the given RequestInfo value\n */\nfunction getUrl(input: RequestInfo): string {\n  return typeof input === \"string\" ? input : input.url;\n}\n\n/**\n * Tries to parse the response as JSON, but falls back to text if that fails\n */\nasync function parseResponseBody(response: Response): Promise<ParsedResponseBody> {\n  let responseBody: string;\n\n  try {\n    responseBody = await response.clone().text();\n  }\n  catch (error) {\n    // The response could not be read\n    return undefined;\n  }\n\n  try {\n    // Try to parse the response as JSON\n    let parsedResponseBody = JSON.parse(responseBody) as ParsedResponseBody;\n\n    if (typeof parsedResponseBody === \"object\") {\n      // Return the parsed object or array\n      return parsedResponseBody;\n    }\n    else {\n      // Coerce the result to a string\n      return String(parsedResponseBody);\n    }\n  }\n  catch (error) {\n    // The response couldn't be parsed as JSON, so just return it as a string\n    return responseBody;\n  }\n}\n\n/**\n * Introduces an artificial delay during local development.\n */\nasync function artificialDelay(): Promise<void> {\n  let milliseconds = 0;\n\n  if (hash.options.delay) {\n    milliseconds = random(0, hash.options.delay);\n  }\n\n  await new Promise<unknown>((resolve) => setTimeout(resolve, milliseconds));\n}\n",
    "import { GitHubAccount } from \"../../github\";\nimport { RepoList } from \"../repo-list/repo-list\";\nimport { AccountListProps } from \"./props\";\n\ninterface AccountItemProps extends AccountListProps {\n  account: GitHubAccount;\n}\n\nexport function AccountItem(props: AccountItemProps) {\n  let { account } = props;\n\n  return (\n    <section key={account.id} className=\"account\">\n      <header>\n        <h1>\n          <a href={`https://github.com/${account.login}`}>\n            {account.avatar_url && <img src={account.avatar_url} className=\"avatar\" />}\n            {account.name}\n          </a>\n        </h1>\n      </header>\n      <AccountItemContents {...props} />\n    </section>\n  );\n}\n\nfunction AccountItemContents(props: AccountItemProps) {\n  let { account, toggleRepo } = props;\n\n  if (account.repos.length > 0) {\n    return <RepoList account={account} toggleRepo={toggleRepo} />;\n  }\n  else if (account.error) {\n    return (\n      <div className=\"error\">\n        <div className=\"error-message\">{account.error}</div>\n      </div>\n    );\n  }\n  else if (account.loading) {\n    return (\n      <div className=\"loading\">\n        <div className=\"loading-message\">Loading...</div>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"no-repos\">\n        <div className=\"empty-message\">There are no repos to show</div>\n      </div>\n    );\n  }\n}\n",
    "import { hash } from \"../../hash\";\nimport { accountCountCssClass } from \"../../util\";\nimport { AccountItem } from \"./account-item\";\nimport { AccountListProps } from \"./props\";\n\nexport function AccountList(props: AccountListProps) {\n  let { accounts } = props;\n\n  return (\n    <main id=\"account_list\" className={accountCountCssClass(hash.accounts)}>\n      <div className=\"responsive-container\">\n        {accounts.map((account) => <AccountItem account={account} {...props} />)}\n      </div>\n    </main>\n  );\n}\n",
    "import { ChangeEvent, FormEvent } from \"react\";\nimport { AddAccountProps } from \"./props\";\n\ninterface State {\n  login: string;\n  busy: boolean;\n}\n\nexport class AddAccount extends React.Component<AddAccountProps, State> {\n  public readonly state: State = {\n    login: \"\",\n    busy: false,\n  };\n\n  public render() {\n    let { submitButtonText } = this.props;\n    let { login, busy } = this.state;\n\n    return (\n      <form className={`add-account form ${busy ? \"busy\" : \"\"}`} onSubmit={this.handleSubmit}>\n        <dl className=\"form-group\">\n          <dt className=\"input-label\">\n            <label htmlFor=\"repo_owner\">GitHub Username</label>\n          </dt>\n          <dd className=\"input-field\">\n            <input type=\"text\" name=\"account_name\" className=\"form-control short\"\n              maxLength={100} autoFocus autoCapitalize=\"off\" autoComplete=\"on\" spellCheck={false}\n              placeholder=\"GitHub Username\" disabled={busy}\n              value={login} onChange={this.handleChange} />\n          </dd>\n        </dl>\n\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={busy}>\n          {submitButtonText || \"Add\"}\n        </button>\n      </form>\n    );\n  }\n\n  private readonly handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ login: event.target.value });\n  }\n\n  private readonly handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.state.login) {\n      this.setState({ busy: true });\n      await this.props.addAccount(this.state.login.trim());\n      this.setState({ login: \"\", busy: false });\n    }\n  }\n}\n",
    "import { AccountList } from \"../account-list/account-list\";\nimport { FirstTime } from \"../first-time/first-time\";\nimport { PageHeader } from \"../page-header/page-header\";\nimport { AddAccount, AppState, RemoveAccount, ReplaceAccount, StateStore, SyncWithHash, ToggleRepo } from \"./state-store\";\n\nexport class App extends React.Component<{}, AppState> implements StateStore {\n  public readonly state!: AppState;\n  public readonly syncWithHash!: SyncWithHash;\n  public readonly addAccount!: AddAccount;\n  public readonly replaceAccount!: ReplaceAccount;\n  public readonly removeAccount!: RemoveAccount;\n  public readonly toggleRepo!: ToggleRepo;\n\n  public constructor(props: Readonly<{}>) {\n    super(props);\n    StateStore.mixin(this);\n  }\n\n  public render() {\n    return [\n      <PageHeader key=\"page_header\" addAccount={this.addAccount} />,\n      <AccountList key=\"account_list\"\n        removeAccount={this.removeAccount}\n        toggleRepo={this.toggleRepo}\n        {...this.state}\n      />,\n      <FirstTime key=\"first_time\" addAccount={this.addAccount} />,\n    ];\n  }\n}\n",
    "import { github, GitHubAccount } from \"../../github\";\n\ntype ReplaceAccountCallback = (oldAccountID: number, newAccount: GitHubAccount) => void;\n\n/**\n * Fetches the specified GitHub account and its repos, and then calls the given callback function\n * to update the app state.\n */\nexport async function fetchGitHubAccount(account: GitHubAccount, replaceAccount: ReplaceAccountCallback) {\n  // Fetch the GitHub account and repos at the same time\n  let safeResults = await Promise.all([\n    safeResolve(github.fetchAccount(account)),\n    safeResolve(github.fetchRepos(account)),\n  ]);\n\n  // @ts-ignore - This line totally confuses the TypeScript compiler\n  let [{ result: accountPOJO, error: accountError }, { result: repos, error: repoError }] = safeResults;\n  let newAccount: GitHubAccount;\n\n  if (accountError) {\n    // An error occurred while fetching the account, so create a dummy account\n    // with the error message\n    newAccount = new GitHubAccount({\n      ...account,\n      error: accountError.message,\n    });\n  }\n  else if (accountPOJO && repoError) {\n    // An error occurred while fetching the repos, so add the error message to the account\n    newAccount = new GitHubAccount({\n      ...accountPOJO,\n      error: repoError.message,\n    });\n  }\n  else if (accountPOJO && repos) {\n    // Everything succeeded, so add the repos to the account\n    newAccount = new GitHubAccount({\n      ...accountPOJO,\n      repos,\n    });\n  }\n  else {\n    newAccount = account;\n  }\n\n  replaceAccount(account.id, newAccount);\n}\n\n\nasync function safeResolve<T>(promise: Promise<T>): Promise<{ result?: T; error?: Error }> {\n  let result: T | undefined;\n  let error: Error | undefined;\n\n  try {\n    result = await promise;\n  }\n  catch (err) {\n    error = err as Error;\n  }\n\n  return { result, error };\n}\n",
    "import { GitHubAccount } from \"../../github\";\nimport { hash } from \"../../hash\";\nimport { fetchGitHubAccount } from \"./fetch-github-account\";\n\nexport type SyncWithHash = () => void;\n\nexport type AddAccount = (login: string) => Promise<void>;\n\nexport type ReplaceAccount = (oldAccountID: number, newAccount: GitHubAccount) => void;\n\nexport type RemoveAccount = (id: number) => void;\n\nexport type ToggleRepo = (accountID: number, repoID: number, include: boolean) => void;\n\nexport interface AppState {\n  accounts: GitHubAccount[];\n}\n\nexport class StateStore {\n  public static mixin(obj: StateStore) {\n    let store = new StateStore();\n    obj.state = store.state;\n    obj.syncWithHash = store.syncWithHash.bind(obj) as SyncWithHash;\n    obj.addAccount = store.addAccount.bind(obj) as AddAccount;\n    obj.replaceAccount = store.replaceAccount.bind(obj) as ReplaceAccount;\n    obj.removeAccount = store.removeAccount.bind(obj) as RemoveAccount;\n    obj.toggleRepo = store.toggleRepo.bind(obj) as ToggleRepo;\n\n    // Immediately sync with the URL hash\n    // HACK: Without setTimeout, the state doesn't update until AJAX fetches complete\n    setTimeout(obj.syncWithHash, 0);   // tslint:disable-line:no-unbound-method\n\n    // Re-sync with the hash anytime it changes\n    hash.addEventListener(\"hashchange\", obj.syncWithHash);   // tslint:disable-line:no-unbound-method\n  }\n\n  public state: AppState = {\n    accounts: [],\n  };\n\n  // Just here to satisfy TypeScript\n  public setState!: SetState<AppState>;\n\n  /**\n   * Syncs the app state with the URL hash\n   */\n  public syncWithHash() {\n    let accounts: GitHubAccount[] = [];\n\n    for (let login of hash.accounts) {\n      // Create a temporary account object to populate the UI\n      // while we fetch the account info from GitHub\n      let account = new GitHubAccount({\n        login,\n        name: login,\n        loading: true,\n      });\n\n      // Asynchronously fetch the account info from GitHub\n      // and replace this temporary account object with the real info\n      // tslint:disable-next-line:no-floating-promises,no-unbound-method\n      fetchGitHubAccount(account, this.replaceAccount);\n\n      accounts.push(account);\n    }\n\n    this.setState({ accounts });\n  }\n\n  /**\n   * Adds a new GitHub account with the specified login to the accounts list,\n   * and asynchronously fetches the account info from GitHub\n   */\n  public async addAccount(login: string) {\n    // Does this account already exist\n    let account = this.state.accounts.find(byLogin(login));\n\n    if (account) {\n      // The account already exists\n      return;\n    }\n\n    // Create a temporary account object to populate the UI\n    // while we fetch the account info from GitHub\n    account = new GitHubAccount({\n      login,\n      name: login,\n      loading: true,\n    });\n\n    // Add this account\n    let accounts = this.state.accounts.slice();\n    accounts.push(account);\n    this.setState({ accounts });\n\n    // Fetch the account info from GitHub\n    // and replace this temporary account object with the real info\n    await fetchGitHubAccount(account, this.replaceAccount);\n  }\n\n  /**\n   * Replaces the specified account in the accounts list with the given GitHub account object.\n   */\n  public replaceAccount(oldAccountID: number, newAccount: GitHubAccount) {\n    let accounts = this.state.accounts.slice();\n\n    // Remove the old account\n    removeAccountByID(accounts, oldAccountID);\n\n    // Just to ensure we don't accidentally add duplicate accounts,\n    // remove the new account if it already exists\n    removeAccountByID(accounts, newAccount.id);\n\n    // Add the new account\n    accounts.push(newAccount);\n\n    // Sort the accounts so they're in the same order as the URL hash.\n    // This makes it easy for users to hack the URL.\n    let sortedAccounts: GitHubAccount[] = [];\n    for (let login of hash.accounts) {\n      let index = accounts.findIndex(byLogin(login));\n      if (index >= 0) {\n        let [account] = accounts.splice(index, 1);\n        sortedAccounts.push(account);\n      }\n    }\n\n    // Append any additional accounts that aren't in the hash yet\n    for (let account of accounts) {\n      sortedAccounts.push(account);\n      hash.addAccount(account);\n    }\n\n    this.setState({ accounts: sortedAccounts });\n  }\n\n  /**\n   * Removes the specified GitHub account from the accounts list\n   */\n  public removeAccount(id: number) {\n    let accounts = this.state.accounts.slice();\n    let { removed } = removeAccountByID(accounts, id);\n\n    if (removed) {\n      this.setState({ accounts });\n      hash.removeAccount(removed);\n    }\n  }\n\n  /**\n   * Toggles the \"hidden\" property of the specified GitHub repo\n   */\n  public toggleRepo(accountID: number, repoID: number, hidden: boolean) {\n    let accounts = this.state.accounts.slice();\n    let account = accounts.find(byID(accountID))!;\n    let repo = account.repos.find(byID(repoID))!;\n    repo.hidden = hidden;\n    this.setState({ accounts });\n    hash.toggleRepo(account, repo, hidden);\n  }\n}\n\n\n/**\n * Removes the account with the specified ID from the array.\n */\nfunction removeAccountByID(accounts: GitHubAccount[], id: number) {\n  let index = accounts.findIndex(byID(id));\n  let removed: GitHubAccount | undefined;\n\n  if (index >= 0) {\n    removed = accounts.splice(index, 1)[0];\n  }\n\n  return { index, removed };\n}\n\n/**\n * Used to search an array for object with the specified \"id\" property\n */\nfunction byID(id: number) {\n  return (obj: { id: number }) => obj.id === id;\n}\n\n/**\n * Used to search an array for object with the specified \"login\" property\n */\nfunction byLogin(login: string) {\n  login = login.trim().toLowerCase();\n  return (obj: { login: string }) => obj.login.trim().toLowerCase() === login;\n}\n",
    "import { hash } from \"../../hash\";\nimport { accountCountCssClass } from \"../../util\";\nimport { AddAccount } from \"../add-account/add-account\";\nimport { FirstTimeProps } from \"./props\";\n\nexport function FirstTime(props: FirstTimeProps) {\n  return (\n    <aside id=\"first_time\" className={accountCountCssClass(hash.accounts)}>\n      <div className=\"responsive-container\">\n        <div className=\"welcome-message\">\n          <h3>Hi! 👋 Enter your GitHub username to get started</h3>\n          <AddAccount submitButtonText=\"Show My Repos\" {...props} />\n        </div>\n      </div>\n    </aside>\n  );\n}\n",
    "import { hash } from \"../../hash\";\nimport { accountCountCssClass } from \"../../util\";\nimport { AddAccount } from \"../add-account/add-account\";\nimport { PageHeaderProps } from \"./props\";\n\nexport function PageHeader(props: PageHeaderProps) {\n  return (\n    <header id=\"page_header\" className={accountCountCssClass(hash.accounts)}>\n      <div className=\"responsive-container\">\n        <img className=\"logo\" src=\"img/logo.png\" alt=\"logo image\" />\n        <h1>My GitHub Repos</h1>\n        <h2>All your GitHub repos on one page</h2>\n\n        <AddAccount {...props} />\n      </div>\n    </header>\n  );\n}\n",
    "import { GitHubRepo } from \"../../github\";\nimport { hash } from \"../../hash\";\nimport { RepoListProps } from \"./props\";\n\nexport function RepoList(props: RepoListProps) {\n  let { account, toggleRepo } = props;\n  let repos = account.repos.filter(byOptions);\n\n  return (\n    <ul className=\"repo-list\">\n      {repos.map((repo) => <RepoItem repo={repo} {...props} />)}\n    </ul>\n  );\n}\n\ninterface RepoItemProps extends RepoListProps {\n  repo: GitHubRepo;\n}\n\nfunction RepoItem(props: RepoItemProps) {\n  let { account, repo } = props;\n\n  return (\n    <li key={repo.id} className=\"repo\">\n      <h2>\n        <a href={`https://github.com/${account.login}/${repo.name}`}>{repo.name}</a>\n      </h2>\n      {repo.description && <h3>{repo.description}</h3>}\n    </li>\n  );\n}\n\n/**\n * Returns true if the GitHub Repo should be shown, based on the current options\n */\nfunction byOptions(repo: GitHubRepo): boolean {\n  if (repo.fork && !hash.options.forks) {\n    // Don't show forked repos\n    return false;\n  }\n  else {\n    return true;\n  }\n}\n",
    "import { ApiClient } from \"./api-client\";\n\n/**\n * A GitHub user or organization account, as returned from the GitHub REST API\n */\nexport interface GitHubAccountPOJO {\n  readonly id: number;\n  login: string;\n  name: string;\n  avatar_url: string;\n  bio: string;\n}\n\n/**\n * Additional GitHub account properties that we need for this app\n */\nexport class GitHubAccount implements GitHubAccountPOJO {\n  public readonly id: number;\n  public login: string;\n  public name: string;\n  public avatar_url: string;\n  public bio: string;\n\n  /**\n   * This account's GitHub repos\n   */\n  public repos: GitHubRepo[];\n\n  /**\n   * Indicates whether we're currently fetching the account info from GitHub\n   */\n  public loading: boolean;\n\n  /**\n   * If an error occurred while fetching account info, then this is the error message\n   */\n  public error?: string;\n\n  public constructor(props: Partial<GitHubAccount> = {}) {\n    this.id = props.id || Math.random();\n    this.login = props.login || \"\";\n    this.name = props.name || \"\";\n    this.avatar_url = props.avatar_url || \"\";\n    this.bio = props.bio || \"\";\n    this.repos = props.repos || [];\n    this.loading = Boolean(props.loading);\n    this.error = props.error;\n  }\n}\n\n/**\n * A GitHub repository, as returned from the GitHub REST API\n */\nexport interface GitHubRepoPOJO {\n  readonly id: number;\n  name: string;\n  full_name: string;\n  description: string;\n  fork: boolean;\n  stargazers_count: boolean;\n}\n\n/**\n * Additional GitHub repo properties that we need for this app\n */\nexport interface GitHubRepo extends GitHubRepoPOJO {\n  /**\n   * Is this repo hidden from the dashboard?\n   */\n  hidden: boolean;\n}\n\nexport class GitHub {\n  private readonly _client: ApiClient = new ApiClient();\n\n  /**\n   * Fetches the specified GitHub account's info, NOT including its repos\n   */\n  public async fetchAccount(account: GitHubAccount): Promise<GitHubAccount> {\n    let accountPOJO = await this._client.fetchObject(`https://api.github.com/users/${account.login}`);\n\n    if (isGitHubAccountPOJO(accountPOJO)) {\n      return new GitHubAccount({\n        ...accountPOJO,\n        loading: false,\n        repos: [],\n      });\n    }\n    else {\n      throw this._client.createError(\"Invalid GitHub account:\", accountPOJO);\n    }\n  }\n\n  /**\n   * Fetches the GitHub repos for the specified account\n   */\n  public async fetchRepos(account: GitHubAccount): Promise<GitHubRepo[]> {\n    let repoPOJOs = await this._client.fetchArray(`https://api.github.com/users/${account.login}/repos`);\n\n    if (isArrayOfGitHubRepoPOJO(repoPOJOs)) {\n      let repos: GitHubRepo[] = [];\n\n      for (let repoPOJO of repoPOJOs) {\n        repos.push({\n          ...repoPOJO,\n          hidden: false,\n        } as GitHubRepo);\n      }\n\n      return repos;\n    }\n    else {\n      throw this._client.createError(\"Invalid GitHub repo:\", repoPOJOs);\n    }\n  }\n}\n\n/**\n * Singleton instance of the GitHub API client\n */\nexport const github = new GitHub();\n\n\n// tslint:disable-next-line:no-any\nfunction isGitHubAccountPOJO(account: any): account is GitHubAccountPOJO {\n  return typeof account === \"object\" &&\n    \"login\" in account && typeof account.login === \"string\" &&\n    \"name\" in account && typeof account.name === \"string\" &&\n    \"bio\" in account && typeof account.bio === \"string\" &&\n    \"avatar_url\" in account && typeof account.avatar_url === \"string\";\n}\n\n// tslint:disable-next-line:no-any\nfunction isArrayOfGitHubRepoPOJO(repos: any[]): repos is GitHubRepoPOJO[] {\n  return repos.length > 0 &&\n    typeof repos[0] === \"object\" &&\n    typeof repos[0].name === \"string\";\n}\n",
    "import { GitHubAccount, GitHubRepo } from \"./github\";\nimport { LOCAL_DEV_MODE } from \"./util\";\n\n// Artificially delay AJAX calls for local development, to simulate network latency\nconst defaultDelay = LOCAL_DEV_MODE ? 1000 : 0;\n\nexport interface Options {\n  /**\n   * Whether to show forked repos on the dashboard\n   */\n  forks: boolean;\n\n  /**\n   * Delays AJAX responses by a number of milliseconds.\n   * This is mostly just used for local development, to simulate network latency.\n   */\n  delay: number;\n}\n\n/**\n * Reads and stores state in the URL hash\n */\nexport class Hash extends EventTarget {\n  private readonly _accounts: Set<string> = new Set();\n  private readonly _hide: Set<string> = new Set();\n  private readonly _options: Options = {\n    forks: false,\n    delay: defaultDelay,\n  };\n\n  /**\n   * The accounts to show on the dashboard\n   */\n  public readonly accounts: ReadonlySet<string> = this._accounts;\n\n  /**\n   * Specific repos to hide\n   */\n  public readonly hide: ReadonlySet<string> = this._hide;\n\n  /**\n   * Options for how the dashboard should be displayed\n   */\n  public readonly options: Readonly<Options> = this._options;\n\n  public constructor() {\n    super();\n    this._handleHashChange();\n    window.addEventListener(\"hashchange\", () => this._handleHashChange());\n  }\n\n  /**\n   * Updates the URL hash to include the specified GitHub account\n   */\n  public addAccount(account: GitHubAccount) {\n    this._accounts.add(account.login);\n    this._updateHash();\n  }\n\n  /**\n   * Updates the URL hash to remove the specified GitHub account\n   */\n  public removeAccount(account: GitHubAccount) {\n    this._accounts.delete(account.login);\n    this._updateHash();\n  }\n\n  /**\n   * Updates the URL hash to hide or show the specified GitHub repo\n   */\n  public toggleRepo(account: GitHubAccount, repo: GitHubRepo, hidden: boolean) {\n    if (hidden) {\n      this._hide.add(repo.full_name);\n    }\n    else {\n      this._hide.delete(repo.full_name);\n    }\n\n    this._updateHash();\n  }\n\n  /**\n   * Updates the URL hash to with the specified options\n   */\n  public setOptions(options: Partial<Options>) {\n    Object.assign(this.options, options);\n    this._updateHash();\n  }\n\n  /**\n   * Returns a URL hash string that matches the Hash object\n   */\n  public toString() {\n    let params = new URLSearchParams();\n\n    if (this.accounts.size > 0) {\n      params.append(\"u\", [...this.accounts].join(\",\"));\n    }\n\n    if (this.hide.size > 0) {\n      params.append(\"hide\", [...this.hide].join(\",\"));\n    }\n\n    if (this.options.forks) {\n      params.append(\"forks\", \"yes\");\n    }\n\n    if (this.options.delay && this.options.delay !== defaultDelay) {\n      params.append(\"delay\", String(this.options.delay));\n    }\n\n    let hashString = params.toString();\n\n    // Don't encode common characters that are valid in the hash\n    hashString = hashString.replace(/%2C/g, \",\");\n    hashString = hashString.replace(/%2F/g, \"/\");\n\n    return hashString;\n  }\n\n  /**\n   * Updates the URL hash to match the Hash object\n   */\n  private _updateHash() {\n    location.hash = this.toString();\n  }\n\n  /**\n   * Updates the Hash object to match the URL hash\n   */\n  private _handleHashChange() {\n    let actualHash = location.hash.substr(1);\n    let expectedHash = this.toString();\n\n    if (actualHash !== expectedHash) {\n      let params = new URLSearchParams(location.hash.substr(1));\n\n      parseStringSet(params.get(\"u\"), this._accounts);\n      parseStringSet(params.get(\"hide\"), this._hide);\n      this._options.forks = parseBoolean(params.get(\"forks\"), this._options.forks);\n      this._options.delay = parsePositiveInteger(params.get(\"delay\"), this._options.delay);\n\n      this.dispatchEvent(new Event(\"hashchange\"));\n    }\n  }\n}\n\n/**\n * The singleton instance of the Hash class.\n */\nexport const hash = new Hash();\n\n/**\n * Updates the contents of the given Set object to match the contents of\n * the specified comma-delimited string\n */\nfunction parseStringSet(value: string | null, set: Set<string>) {\n  set.clear();\n\n  if (value) {\n    let strings = value.split(\",\");\n    for (let string of strings) {\n      string = string.trim();\n      if (string.length > 0) {\n        set.add(string);\n      }\n    }\n  }\n}\n\n/**\n * Parses a boolean string\n */\nfunction parseBoolean(value: string | null, defaultValue = false): boolean {\n  if (!value) {\n    return defaultValue;\n  }\n  else {\n    return [\"yes\", \"true\", \"on\", \"ok\", \"show\"].includes(value.toLowerCase());\n  }\n}\n\n/**\n * Parses a numeric string.  It can be a float or integer, positive or negative.\n */\nfunction parseNumber(value: string | null, defaultValue = 0): number {\n  let number = parseFloat(value!);\n  return isNaN(number) ? defaultValue : number;\n}\n\n/**\n * Parses an integer string.  It can be positive or negative.\n */\nfunction parseInteger(value: string | null, defaultValue = 0): number {\n  let number = parseNumber(value, defaultValue);\n  return Number.isSafeInteger(number) ? number : Math.round(number);\n}\n\n/**\n * Parses a positive integer string.  It can be positive or zero.\n */\nfunction parsePositiveInteger(value: string | null, defaultValue = 0): number {\n  let number = parseInteger(value, defaultValue);\n  return number >= 0 ? number : defaultValue;\n}\n",
    "import { App } from \"./components/app/app\";\n\nReactDOM.render(<App />, document.body);\n",
    "// When running on localhost, we introduce artificial delays\n// and use LocalStorage instead of Fetch, to avoid rate limits\nexport const LOCAL_DEV_MODE = location.hostname === \"localhost\";\n\nexport interface POJOof<T> {\n  [key: string]: T;\n}\n\nexport interface POJO extends POJOof<unknown> { }\n\n/**\n * Converts a Map-like object to a POJO with string keys\n */\nexport function mapToPOJO<K, V>(map: Map<K, V>): POJOof<V> {\n  let pojo = {} as POJOof<V>;\n\n  for (let [key, value] of map.entries()) {\n    pojo[key.toString()] = value;\n  }\n\n  return pojo;\n}\n\n/**\n * Returns a random number between min and max, inclusive.\n */\nexport function random(min: number, max: number): number {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Returns a CSS class string that indicates the number of accounts.\n */\nexport function accountCountCssClass(accounts: ReadonlySet<string>): string {\n  switch (accounts.size) {\n    case 0:\n      return \"no-accounts\";\n    case 1:\n      return \"has-accounts has-one-account\";\n    default:\n      return \"has-accounts has-multiple-accounts\";\n  }\n}\n"
  ]
}