{
  "version": 3,
  "sources": [
    "..\\node_modules\\browser-pack\\_prelude.js",
    "..\\_ts\\components\\app.tsx",
    "..\\_ts\\components\\edit-dashboard\\account-list.tsx",
    "..\\_ts\\components\\edit-dashboard\\add-account-form.tsx",
    "..\\_ts\\components\\edit-dashboard\\dialog.tsx",
    "..\\_ts\\index.tsx",
    "..\\_ts\\params.ts"
  ],
  "names": [],
  "mappings": "AAAA;;;ACAA,sCAAmC;AACnC,oDAA8D;AAG9D,SAAgB,GAAG;IACjB,IAAI,eAAM,CAAC,KAAK,EAAE;QAChB,OAAO,oBAAC,4BAAmB,OAAG,CAAC;KAChC;SACI;QACH,OAAO,iDAAyB,CAAC;KAClC;AACH,CAAC;AAPD,kBAOC;;;;ACAD,SAAgB,WAAW,CAAC,KAAY;IACtC,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;IAEnC,OAAO,CACL,6BAAK,EAAE,EAAC,mBAAmB,EAAC,SAAS,EAAE,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;QACzE,4BAAI,SAAS,EAAC,cAAc,IACzB,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,oBAAC,WAAW,kBAAC,OAAO,EAAE,OAAO,IAAM,KAAK,EAAI,CAAC,CACrE;QACJ,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,oBAAC,QAAQ,kBAAC,OAAO,EAAE,OAAO,IAAM,KAAK,EAAI,CAAC,CACjE,CACP,CAAC;AACJ,CAAC;AAXD,kCAWC;AAOD,MAAM,WAAY,SAAQ,KAAK,CAAC,SAAmC;IAAnE;;QAaU,uBAAkB,GAAG,CAAC,KAAiB,EAAE,EAAE;YACjD,IAAI,GAAG,GAAI,KAAK,CAAC,MAAsB,CAAC,OAAO,CAAC,GAAI,CAAC;YACrD,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAChC,CAAC,CAAA;IACH,CAAC;IAhBQ,MAAM;QACX,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvC,OAAO,CACL,4BAAI,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,SAAS;YACrF,uCAAa,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,kBAAkB,IACxD,OAAO,CAAC,IAAI,CACX,CACD,CACN,CAAC;IACJ,CAAC;CAMF;AAMD,SAAS,QAAQ,CAAC,KAAoB;IACpC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;IAElC,OAAO,CACL,iCAAS,SAAS,EAAE,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,WAAW;QAC3E;YACE,gCAAK,OAAO,CAAC,IAAI,CAAM,CAChB;QACT,gCACG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,oBAAC,QAAQ,kBAAC,IAAI,EAAE,IAAI,IAAM,KAAK,EAAI,CAAC,CAC9D,CACG,CACX,CAAC;AACJ,CAAC;AAMD,MAAM,QAAS,SAAQ,KAAK,CAAC,SAAgC;IACpD,MAAM;QACX,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE1B,OAAO,CACL,4BAAI,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,EAAC,MAAM,IACjC,IAAI,CAAC,IAAI,CACP,CACN,CAAC;IACJ,CAAC;CACF;;;;ACvED,MAAa,cAAe,SAAQ,KAAK,CAAC,SAAuB;IAAjE;;QACkB,UAAK,GAAU;YAC7B,WAAW,EAAE,EAAE;SAChB,CAAC;QAuBM,iBAAY,GAAG,CAAC,KAAoC,EAAE,EAAE;YAC9D,IAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QACrD,CAAC,CAAA;QAEO,iBAAY,GAAG,CAAC,KAAiC,EAAE,EAAE;YAC3D,KAAK,CAAC,cAAc,EAAE,CAAC;YAEvB,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBAC1B,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;gBACrD,IAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC;aACpC;QACH,CAAC,CAAA;IACH,CAAC;IAjCQ,MAAM;QACX,OAAO,CACL,8BAAM,EAAE,EAAC,kBAAkB,EAAC,QAAQ,EAAE,IAAI,CAAC,YAAY;YACrD,6BAAK,SAAS,EAAC,UAAU;gBACvB,4BAAI,SAAS,EAAC,YAAY;oBACxB,4BAAI,SAAS,EAAC,aAAa;wBACzB,+BAAO,OAAO,EAAC,YAAY,sBAAwB,CAChD;oBACL,4BAAI,SAAS,EAAC,aAAa;wBACzB,+BAAO,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,cAAc,EAAC,SAAS,EAAC,oBAAoB,EACnE,SAAS,EAAE,GAAG,EAAE,SAAS,QAAC,cAAc,EAAC,KAAK,EAAC,YAAY,EAAC,KAAK,EAAC,UAAU,EAAE,KAAK,EACnF,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,GAAI,CAC7D,CACF;gBAEL,gCAAQ,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAC,iBAAiB,UAAa,CAC1D,CACD,CACR,CAAC;IACJ,CAAC;CAcF;AAtCD,wCAsCC;;;;AChDD,yCAAsC;AACtC,iDAA6C;AAC7C,yDAAoD;AAIpD,MAAM,aAAa,GAAG;IACpB;QACE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE;YAC7B,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE;YACpC,EAAE,IAAI,EAAE,iBAAiB,EAAE,OAAO,EAAE,IAAI,EAAE;YAC1C,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,IAAI,EAAE;YAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE;SACnC;KACF;IACD;QACE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE;YAC1B,EAAE,IAAI,EAAE,gBAAgB,EAAE,OAAO,EAAE,IAAI,EAAE;YACzC,EAAE,IAAI,EAAE,wBAAwB,EAAE,OAAO,EAAE,IAAI,EAAE;YACjD,EAAE,IAAI,EAAE,4BAA4B,EAAE,OAAO,EAAE,IAAI,EAAE;YACrD,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,EAAE;YACtC,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,IAAI,EAAE;YAC3C,EAAE,IAAI,EAAE,0BAA0B,EAAE,OAAO,EAAE,IAAI,EAAE;YACnD,EAAE,IAAI,EAAE,8BAA8B,EAAE,OAAO,EAAE,IAAI,EAAE;YACvD,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE;YACxC,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,IAAI,EAAE;YAC3C,EAAE,IAAI,EAAE,0BAA0B,EAAE,OAAO,EAAE,IAAI,EAAE;YACnD,EAAE,IAAI,EAAE,8BAA8B,EAAE,OAAO,EAAE,IAAI,EAAE;YACvD,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE;SACzC;KACF;IACD;QACE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE;YAC1B,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,EAAE;YACtC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE;YAC9B,EAAE,IAAI,EAAE,oBAAoB,EAAE,OAAO,EAAE,IAAI,EAAE;YAC7C,EAAE,IAAI,EAAE,wBAAwB,EAAE,OAAO,EAAE,IAAI,EAAE;SAClD;KACF;CACF,CAAC;AAOF,MAAa,mBAAoB,SAAQ,KAAK,CAAC,SAAoB;IAAnE;;QACkB,UAAK,GAAU;YAC7B,QAAQ,EAAE,aAAa;YACvB,eAAe,EAAE,aAAa,CAAC,CAAC,CAAC;SAClC,CAAC;QA8BM,eAAU,GAAG,CAAC,IAAY,EAAE,EAAE;YACpC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC3C,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAE1C,IAAI,OAAO,EAAE;gBACX,4CAA4C;gBAC5C,IAAI,CAAC,QAAQ,CAAC,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC,CAAC;aAC7C;iBACI;gBACH,kDAAkD;gBAClD,wDAAwD;gBACxD,OAAO,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;gBAC9B,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;aAC7B;YAED,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC,CAAC;QACxD,CAAC,CAAA;QAEO,kBAAa,GAAG,CAAC,IAAY,EAAE,EAAE;YACvC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC3C,IAAI,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAE7C,IAAI,KAAK,IAAI,CAAC,EAAE;gBACd,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;aAC7B;QACH,CAAC,CAAA;QAEO,kBAAa,GAAG,CAAC,IAAY,EAAE,EAAE;YACvC,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAClC;YACD,IAAI,CAAC,QAAQ,CAAC,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC,CAAC;QAC9C,CAAC,CAAA;QAEO,eAAU,GAAG,CAAC,WAAmB,EAAE,QAAgB,EAAE,OAAgB,EAAE,EAAE;YAC/E,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC3C,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAE,CAAC;YAClD,IAAI,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAE,CAAC;YACjD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC9B,CAAC,CAAA;IACH,CAAC;IAxEQ,MAAM;QACX,OAAO,CACL,6BAAK,SAAS,EAAC,kBAAkB;YAC/B,gCAAQ,IAAI,QAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM;gBAC9E,gCAAQ,SAAS,EAAC,eAAe;oBAC/B,6BAAK,SAAS,EAAC,MAAM,EAAC,GAAG,EAAC,cAAc,EAAC,GAAG,EAAC,YAAY,GAAG;oBAC5D,qDAA2B;oBAC3B,sFAA4D,CACrD;gBACT,6BAAK,SAAS,EAAC,aAAa;oBAC1B,gCAAK,QAAQ,EAAE,CAAM;oBACrB,oBAAC,iCAAc,IAAC,UAAU,EAAE,IAAI,CAAC,UAAU,GAAI;oBAC/C,oBAAC,0BAAW,IAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,EAC9E,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,EACpE,UAAU,EAAE,IAAI,CAAC,UAAU,GAAI,CAC7B;gBAEN,gCAAQ,SAAS,EAAC,eAAe;oBAC/B,gCAAQ,IAAI,EAAC,QAAQ,EAAC,QAAQ,QAAC,SAAS,EAAC,KAAK,aAAgB;oBAC9D,gCAAQ,IAAI,EAAC,QAAQ,EAAC,QAAQ,QAAC,SAAS,EAAC,iBAAiB,0BAA6B,CAChF,CACF;YAET,6BAAK,SAAS,EAAC,UAAU,GAAO,CAC5B,CACP,CAAC;IACJ,CAAC;CA8CF;AA9ED,kDA8EC;AAED,SAAS,QAAQ;IACf,IAAI,eAAM,CAAC,KAAK,EAAE;QAChB,OAAO,wDAAwD,CAAC;KACjE;SACI;QACH,OAAO,qBAAqB,CAAC;KAC9B;AACH,CAAC;AAED,SAAS,MAAM,CAAC,IAAY;IAC1B,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACjC,OAAO,CAAC,GAAqB,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC;AAC3E,CAAC;;;;AC1ID,0CAAuC;AAEvC,QAAQ,CAAC,MAAM,CAAC,oBAAC,SAAG,OAAG,EAAE,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;;;;ACF/D,MAAM,MAAM;IAKV;QAHQ,WAAM,GAAG,IAAI,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAIpD,0FAA0F;QAC1F,iDAAiD;QACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;IAC5B,CAAC;IAGD,IAAW,OAAO;QAChB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;IAGM,QAAQ;QACb,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IAChC,CAAC;CACF;AAED;;GAEG;AACU,QAAA,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import { params } from \"../params\";\nimport { EditDashboardDialog } from \"./edit-dashboard/dialog\";\n\n\nexport function App() {\n  if (params.isNew) {\n    return <EditDashboardDialog />;\n  }\n  else {\n    return <main>Hello, world</main>;\n  }\n}\n",
    "import { MouseEvent } from \"react\";\nimport { GitHubAccount, GitHubRepo } from \"./state\";\n\ninterface Props {\n  accounts: GitHubAccount[];\n  selected?: GitHubAccount;\n  selectAccount(name: string): void;\n  removeAccount(name: string): void;\n  toggleRepo(accountName: string, repoName: string, include: boolean): void;\n}\n\nexport function AccountList(props: Props) {\n  let { accounts, selected } = props;\n\n  return (\n    <div id=\"edit_account_list\" className={accounts.length === 0 ? \"empty\" : \"\"}>\n      <ul className=\"account-list\">\n        {accounts.map((account) => <AccountItem account={account} {...props} />)}\n      </ul>\n      {accounts.map((account) => <RepoList account={account} {...props} />)}\n    </div>\n  );\n}\n\ninterface AccountItemProps extends Props {\n  account: GitHubAccount;\n}\n\n\nclass AccountItem extends React.Component<AccountItemProps, object> {\n  public render() {\n    let { account, selected } = this.props;\n\n    return (\n      <li key={account.name} className={account === selected ? \"account selected\" : \"account\"}>\n        <a data-key={account.name} onClick={this.handleAccountClick}>\n          {account.name}\n        </a>\n      </li>\n    );\n  }\n\n  private handleAccountClick = (event: MouseEvent) => {\n    let key = (event.target as HTMLElement).dataset.key!;\n    this.props.selectAccount(key);\n  }\n}\n\ninterface RepoListProps extends Props {\n  account: GitHubAccount;\n}\n\nfunction RepoList(props: RepoListProps) {\n  let { account, selected } = props;\n\n  return (\n    <section className={account === selected ? \"repo-list selected\" : \"repo-list\"}>\n      <header>\n        <h3>{account.name}</h3>\n      </header>\n      <ul>\n        {account.repos.map((repo) => <RepoItem repo={repo} {...props} />)}\n      </ul>\n    </section>\n  );\n}\n\ninterface RepoItemProps extends RepoListProps {\n  repo: GitHubRepo;\n}\n\nclass RepoItem extends React.Component<RepoItemProps, object> {\n  public render() {\n    let { repo } = this.props;\n\n    return (\n      <li key={repo.name} className=\"repo\">\n        {repo.name}\n      </li>\n    );\n  }\n}\n",
    "import { ChangeEvent, FormEvent } from \"react\";\n\ninterface Props {\n  addAccount(name: string): void;\n}\n\ninterface State {\n  accountName: string;\n}\n\nexport class AddAccountForm extends React.Component<Props, State> {\n  public readonly state: State = {\n    accountName: \"\",\n  };\n\n  public render() {\n    return (\n      <form id=\"add_account_form\" onSubmit={this.handleSubmit}>\n        <div className=\"clearfix\">\n          <dl className=\"form-group\">\n            <dt className=\"input-label\">\n              <label htmlFor=\"repo_owner\">GitHub Username</label>\n            </dt>\n            <dd className=\"input-field\">\n              <input type=\"text\" name=\"account_name\" className=\"form-control short\"\n                maxLength={100} autoFocus autoCapitalize=\"off\" autoComplete=\"off\" spellCheck={false}\n                value={this.state.accountName} onChange={this.handleChange} />\n            </dd>\n          </dl>\n\n          <button type=\"submit\" className=\"btn btn-primary\">Add</button>\n        </div>\n      </form>\n    );\n  }\n\n  private handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ accountName: event.target.value });\n  }\n\n  private handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.state.accountName) {\n      this.props.addAccount(this.state.accountName.trim());\n      this.setState({ accountName: \"\" });\n    }\n  }\n}\n",
    "import { params } from \"../../params\";\nimport { AccountList } from \"./account-list\";\nimport { AddAccountForm } from \"./add-account-form\";\nimport { GitHubAccount } from \"./state\";\n\n\nconst dummyAccounts = [\n  {\n    name: \"JamesMessinger\", repos: [\n      { name: \"some-repo\", include: true },\n      { name: \"some-other-repo\", include: true },\n      { name: \"yet-another-repo\", include: true },\n      { name: \"my-repo\", include: true },\n    ]\n  },\n  {\n    name: \"APIDevTools\", repos: [\n      { name: \"swagger-parser\", include: true },\n      { name: \"json-schema-ref-parser\", include: true },\n      { name: \"swagger-express-middleware\", include: true },\n      { name: \"swagger-cli\", include: true },\n      { name: \"swagger-parser-3\", include: true },\n      { name: \"json-schema-ref-parser-3\", include: true },\n      { name: \"swagger-express-middleware-3\", include: true },\n      { name: \"swagger-cli-3\", include: true },\n      { name: \"swagger-parser-2\", include: true },\n      { name: \"json-schema-ref-parser-2\", include: true },\n      { name: \"swagger-express-middleware-2\", include: true },\n      { name: \"swagger-cli-2\", include: true },\n    ]\n  },\n  {\n    name: \"JS-DevTools\", repos: [\n      { name: \"simplifyify\", include: true },\n      { name: \"ono\", include: true },\n      { name: \"version-bump-promt\", include: true },\n      { name: \"karma-host-environment\", include: true },\n    ]\n  },\n];\n\ninterface State {\n  accounts: GitHubAccount[];\n  selectedAccount?: GitHubAccount;\n}\n\nexport class EditDashboardDialog extends React.Component<{}, State> {\n  public readonly state: State = {\n    accounts: dummyAccounts,\n    selectedAccount: dummyAccounts[0],\n  };\n\n  public render() {\n    return (\n      <div className=\"dialog-container\">\n        <dialog open className={this.state.accounts.length === 0 ? \"open empty\" : \"open\"}>\n          <header className=\"dialog-header\">\n            <img className=\"logo\" src=\"img/logo.png\" alt=\"logo image\" />\n            <h1>GitHub Repo Health</h1>\n            <h2>See the health of all your GitHub repos on one page</h2>\n          </header>\n          <div className=\"dialog-body\">\n            <h3>{getTitle()}</h3>\n            <AddAccountForm addAccount={this.addAccount} />\n            <AccountList accounts={this.state.accounts} selected={this.state.selectedAccount}\n              selectAccount={this.selectAccount} removeAccount={this.removeAccount}\n              toggleRepo={this.toggleRepo} />\n          </div>\n\n          <footer className=\"dialog-footer\">\n            <button type=\"button\" disabled className=\"btn\">Cancel</button>\n            <button type=\"button\" disabled className=\"btn btn-primary\">Create My Dashboard</button>\n          </footer>\n        </dialog>\n\n        <div className=\"backdrop\"></div>\n      </div>\n    );\n  }\n\n  private addAccount = (name: string) => {\n    let accounts = this.state.accounts.slice();\n    let account = accounts.find(byName(name));\n\n    if (account) {\n      // This account already exists, so select it\n      this.setState({ selectedAccount: account });\n    }\n    else {\n      // Add this account to the BEGINNING of the array.\n      // This makes sure it's visible on small mobile screens.\n      account = { name, repos: [] };\n      accounts.unshift(account);\n      this.setState({ accounts });\n    }\n\n    this.setState({ accounts, selectedAccount: account });\n  }\n\n  private removeAccount = (name: string) => {\n    let accounts = this.state.accounts.slice();\n    let index = accounts.findIndex(byName(name));\n\n    if (index >= 0) {\n      accounts.splice(index, 1);\n      this.setState({ accounts });\n    }\n  }\n\n  private selectAccount = (name: string) => {\n    let account = this.state.accounts.find(byName(name));\n    if (!account) {\n      account = this.state.accounts[0];\n    }\n    this.setState({ selectedAccount: account });\n  }\n\n  private toggleRepo = (accountName: string, repoName: string, include: boolean) => {\n    let accounts = this.state.accounts.slice();\n    let account = accounts.find(byName(accountName))!;\n    let repo = account.repos.find(byName(repoName))!;\n    repo.include = include;\n    this.setState({ accounts });\n  }\n}\n\nfunction getTitle(): string {\n  if (params.isNew) {\n    return \"Hi! 👋 Enter your GitHub username below to get started\";\n  }\n  else {\n    return \"Edit Your Dashboard\";\n  }\n}\n\nfunction byName(name: string) {\n  name = name.trim().toLowerCase();\n  return (obj: { name: string }) => obj.name.trim().toLowerCase() === name;\n}\n",
    "import { App } from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById(\"react-app\"));\n",
    "class Params {\n  public isNew: boolean;\n  private _query = new URLSearchParams(location.search);\n\n\n  public constructor() {\n    // If the params are empty when the page first loads, then we're building a new dashboard,\n    // rather than showing or editing an existing one\n    this.isNew = this.isEmpty;\n  }\n\n\n  public get isEmpty(): boolean {\n    return !this._query.has(\"include\");\n  }\n\n\n  public toString() {\n    this._query.sort();\n    return this._query.toString();\n  }\n}\n\n/**\n * Singleton reference to the page's query params\n */\nexport const params = new Params();\n"
  ]
}