{
  "version": 3,
  "sources": [
    "..\\node_modules\\browser-pack\\_prelude.js",
    "..\\_ts\\components\\app.tsx",
    "..\\_ts\\components\\edit-dashboard-form.tsx",
    "..\\_ts\\components\\edit-dashboard-modal.tsx",
    "..\\_ts\\index.tsx",
    "..\\_ts\\params.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import { params } from \"../params\";\nimport { EditDashboardModal } from \"./edit-dashboard-modal\";\n\n\nexport function App() {\n  if (params.isNew) {\n    return <EditDashboardModal />;\n  }\n  else {\n    return <div>Hello, world</div>;\n  }\n}\n",
    "\n\nexport class EditDashboardForm extends React.Component<{}, State> {\n  public getInitialState() {\n    return {\n      accountName: \"\"\n    };\n  }\n\n  public render() {\n    return (\n      <form id=\"add_account_form\">\n        <div className=\"clearfix\">\n          <dl className=\"form-group\">\n            <dt className=\"input-label\">\n              <label htmlFor=\"repo_owner\">GitHub Username</label>\n            </dt>\n            <dd className=\"input-field\">\n              <input type=\"text\" name=\"account_name\" autoFocus\n                maxLength={100} autoCapitalize=\"off\" autoComplete=\"off\" spellCheck={false}\n                className=\"form-control short\" />\n            </dd>\n          </dl>\n\n          <button type=\"submit\" className=\"btn btn-primary\">Add</button>\n        </div>\n      </form>\n    );\n  }\n\n  private async addAccount(event: Event) {\n    event.preventDefault();\n    // let accountName = dom.editDashboard.accountName.value.trim();\n    // await fetchRepos(accountName);\n    // dom.editDashboard.accountName.value = \"\";\n  }\n}\n\n\ninterface State {\n  accountName: string;\n}\n",
    "import { params } from \"../params\";\nimport { EditDashboardForm } from \"./edit-dashboard-form\";\n\n\nexport function EditDashboardModal() {\n  return (\n    <div className=\"dialog-container\">\n      <dialog open className=\"open\">\n        <header className=\"dialog-header\">\n          <img className=\"logo\" src=\"img/logo.png\" alt=\"logo image\" />\n          <h1>GitHub Repo Health</h1>\n          <h2>See the health of all your GitHub repos on one page</h2>\n        </header>\n        <div className=\"dialog-body\">\n          <h3>{getTitle()}</h3>\n          <EditDashboardForm />\n        </div>\n\n        <footer className=\"dialog-footer\">\n          <button type=\"button\" disabled className=\"btn\">Cancel</button>\n          <button type=\"button\" disabled className=\"btn btn-primary\">Create My Dashboard</button>\n        </footer>\n      </dialog>\n\n      <div className=\"backdrop\"></div>\n    </div>\n  );\n}\n\n\nfunction getTitle(): string {\n  if (params.isNew) {\n    return \"Hi! ðŸ‘‹ Enter your GitHub username below to get started\";\n  }\n  else {\n    return \"Edit Your Dashboard\";\n  }\n}\n",
    "import { App } from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById(\"react-app\"));\n",
    "class Params {\n  public isNew: boolean;\n  private _query = new URLSearchParams(location.search);\n\n\n  public constructor() {\n    // If the params are empty when the page first loads, then we're building a new dashboard,\n    // rather than showing or editing an existing one\n    this.isNew = this.isEmpty;\n  }\n\n\n  public get isEmpty(): boolean {\n    return !this._query.has(\"include\");\n  }\n\n\n  public toString() {\n    this._query.sort();\n    return this._query.toString();\n  }\n}\n\n/**\n * Singleton reference to the page's query params\n */\nexport const params = new Params();\n"
  ]
}