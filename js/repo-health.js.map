{
  "version": 3,
  "sources": [
    "..\\node_modules\\browser-pack\\_prelude.js",
    "..\\_ts\\api-client.ts",
    "..\\_ts\\components\\account-list\\account-item.tsx",
    "..\\_ts\\components\\account-list\\account-list.tsx",
    "..\\_ts\\components\\add-account\\add-account.tsx",
    "..\\_ts\\components\\app\\app.tsx",
    "..\\_ts\\components\\app\\fetch-github-account.ts",
    "..\\_ts\\components\\app\\hash.ts",
    "..\\_ts\\components\\app\\state-store.ts",
    "..\\_ts\\components\\first-time\\first-time.tsx",
    "..\\_ts\\github.ts",
    "..\\_ts\\index.tsx"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "interface JsonPojo {\n  [key: string]: string | number | boolean | JsonPojo | JsonPojo[];\n}\n\nexport type ParsedResponseBody = string | JsonPojo | JsonPojo[] | undefined;\n\n/**\n * A wrapper around the Fetch API, with added error handling and automatic response parsing.\n */\nexport class ApiClient {\n  /**\n   * Returns the parsed response, or throws an error if an error response is returned\n   */\n  public async fetch(input: RequestInfo, init?: RequestInit): Promise<ParsedResponseBody> {\n    let response = await fetch(input, init);\n    let parsedResponseBody = await parseResponseBody(response);\n\n    if (!response.ok) {\n      throw this.createError(\n        `${getUrl(input)} returned an HTTP ${response.status} (${response.statusText || \"Error\"}) response`,\n        parsedResponseBody\n      );\n    }\n\n    return parsedResponseBody;\n  }\n\n  /**\n   * Returns the parsed response if it's a valid JSON array; otherwise, or throws an error.\n   */\n  public async fetchArray(input: RequestInfo, init?: RequestInit): Promise<JsonPojo[]> {\n    let parsedResponseBody = await this.fetch(input, init);\n\n    if (!Array.isArray(parsedResponseBody)) {\n      throw this.createError(\n        `${getUrl(input)} did not return a JSON array as expected`,\n        parsedResponseBody\n      );\n    }\n\n    return parsedResponseBody;\n  }\n\n  /**\n   * Returns the parsed response if it's a valid JSON object; otherwise, or throws an error.\n   */\n  public async fetchObject(input: RequestInfo, init?: RequestInit): Promise<JsonPojo> {\n    let parsedResponseBody = await this.fetch(input, init);\n\n    if (typeof parsedResponseBody !== \"object\") {\n      throw this.createError(\n        `${getUrl(input)} did not return a JSON object as expected`,\n        parsedResponseBody\n      );\n    }\n    else if (Array.isArray(parsedResponseBody)) {\n      throw this.createError(\n        `${getUrl(input)} returned a JSON array, but a JSON object was expected`,\n        parsedResponseBody\n      );\n    }\n\n    return parsedResponseBody;\n  }\n\n  /**\n   * Creates an Error with the specified message, including the parsed response body\n   */\n  public createError(message: string, parsedResponseBody: ParsedResponseBody): Error {\n    return new Error(message + \"\\n\" + JSON.stringify(parsedResponseBody, undefined, 2));\n  }\n}\n\n\n/**\n * Returns the URL from the given RequestInfo value\n */\nfunction getUrl(input: RequestInfo): string {\n  return typeof input === \"string\" ? input : input.url;\n}\n\n/**\n * Tries to parse the response as JSON, but falls back to text if that fails\n */\nasync function parseResponseBody(response: Response): Promise<ParsedResponseBody> {\n  let responseBody: string;\n\n  try {\n    responseBody = await response.text();\n  }\n  catch (error) {\n    // The response could not be read\n    return undefined;\n  }\n\n  try {\n    // Try to parse the response as JSON\n    let parsedResponseBody = JSON.parse(responseBody);\n\n    if (typeof parsedResponseBody === \"object\") {\n      // Return the parsed object or array\n      return parsedResponseBody;\n    }\n    else {\n      // Coerce the result to a string\n      return String(parsedResponseBody);\n    }\n  }\n  catch (error) {\n    // The response couldn't be parsed as JSON, so just return it as a string\n    return responseBody;\n  }\n}\n",
    "import { GitHubAccount } from \"../../github\";\nimport { AccountListProps } from \"./props\";\n\ninterface AccountItemProps extends AccountListProps {\n  account: GitHubAccount;\n}\n\nexport function AccountItem(props: AccountItemProps) {\n  let { account } = props;\n\n  return (\n    <section key={account.id} className=\"account\">\n      <header>\n        <h1>\n          {account.avatar_url && <img src={account.avatar_url} className=\"avatar\" />}\n          {account.name}\n        </h1>\n      </header>\n    </section>\n  );\n}\n",
    "import { AddAccount } from \"../add-account/add-account\";\nimport { AccountItem } from \"./account-item\";\nimport { AccountListProps } from \"./props\";\n\nexport function AccountList(props: AccountListProps) {\n  let { accounts } = props;\n  let count = accounts.length === 0 ? \"no-accounts\" : accounts.length === 1 ? \"has-one-account\" : \"has-accounts\";\n\n  return (\n    <main id=\"account_list\" className={count}>\n      <div className=\"responsive-container\">\n        <AddAccount submitButtonText=\"Add\" {...props} />\n        {accounts.map((account) => <AccountItem account={account} {...props} />)}\n      </div>\n    </main>\n  );\n}\n",
    "import { ChangeEvent, FormEvent } from \"react\";\nimport { AddAccountProps } from \"./props\";\n\ninterface State {\n  accountName: string;\n  busy: boolean;\n}\n\nexport class AddAccount extends React.Component<AddAccountProps, State> {\n  public readonly state: State = {\n    accountName: \"\",\n    busy: false,\n  };\n\n  public render() {\n    let { submitButtonText } = this.props;\n    let { accountName, busy } = this.state;\n\n    return (\n      <form className={`add-account form ${busy ? \"busy\" : \"\"}`} onSubmit={this.handleSubmit}>\n        <dl className=\"form-group\">\n          <dt className=\"input-label\">\n            <label htmlFor=\"repo_owner\">GitHub Username</label>\n          </dt>\n          <dd className=\"input-field\">\n            <input type=\"text\" name=\"account_name\" className=\"form-control short\"\n              maxLength={100} autoFocus autoCapitalize=\"off\" autoComplete=\"on\" spellCheck={false}\n              placeholder=\"GitHub Username\" disabled={busy}\n              value={accountName} onChange={this.handleChange} />\n          </dd>\n        </dl>\n\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={busy}>\n          {submitButtonText}\n        </button>\n      </form>\n    );\n  }\n\n  private handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ accountName: event.target.value });\n  }\n\n  private handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.state.accountName) {\n      this.setState({ busy: true });\n      await this.props.addAccount(this.state.accountName.trim());\n      this.setState({ accountName: \"\", busy: false });\n    }\n  }\n}\n",
    "import { AccountList } from \"../account-list/account-list\";\nimport { FirstTime } from \"../first-time/first-time\";\nimport { AddAccount, AppState, RemoveAccount, ReplaceAccount, StateStore, ToggleRepo } from \"./state-store\";\n\nexport class App extends React.Component<{}, AppState> implements StateStore {\n  public readonly state!: AppState;\n  public readonly addAccount!: AddAccount;\n  public readonly replaceAccount!: ReplaceAccount;\n  public readonly removeAccount!: RemoveAccount;\n  public readonly toggleRepo!: ToggleRepo;\n\n  public constructor(props: Readonly<{}>) {\n    super(props);\n    StateStore.mixin(this);\n  }\n\n  public render() {\n    let { accounts } = this.state;\n\n    return [\n      <FirstTime key=\"first_time\" accounts={accounts} addAccount={this.addAccount} />,\n      <AccountList key=\"account_list\"\n        addAccount={this.addAccount}\n        removeAccount={this.removeAccount}\n        toggleRepo={this.toggleRepo}\n        {...this.state}\n      />,\n    ];\n  }\n}\n",
    "import { github, GitHubAccount, GitHubAccountPOJO } from \"../../github\";\n\ntype ReplaceAccountCallback = (oldAccountID: number, newAccount: GitHubAccount) => void;\n\n/**\n * Fetches the specified GitHub account and its repos, and then calls the given callback function\n * to update the app state.\n */\nexport async function fetchGitHubAccount(accountPOJO: GitHubAccountPOJO, replaceAccount: ReplaceAccountCallback) {\n  // Fetch the GitHub account and repos at the same time\n  let safeResults = await Promise.all([\n    safeResolve(github.fetchAccount(accountPOJO.login)),\n    safeResolve(github.fetchRepos(accountPOJO.login)),\n    artificialDelay(),\n  ]);\n\n  // @ts-ignore - This line totally confuses the TypeScript compiler\n  let [{ result: account, error: accountError }, { result: repos, error: repoError }] = safeResults;\n\n  if (accountError) {\n    // An error occurred while fetching the account, so create a dummy account\n    // with the error message\n    account = {\n      ...accountPOJO,\n      repos: [],\n      error: accountError.message,\n    };\n  }\n  else if (account && repoError) {\n    // An error occurred while fetching the repos, so add the error message to the account\n    account.error = repoError.message;\n  }\n  else if (account && repos) {\n    // Everything succeeded, so add the repos to the account\n    account.repos = repos;\n  }\n\n  replaceAccount(accountPOJO.id, account!);\n}\n\n\nasync function safeResolve<T>(promise: Promise<T>): Promise<{ result?: T; error?: Error }> {\n  let result, error;\n\n  try {\n    result = await promise;\n  }\n  catch (err) {\n    error = err;\n  }\n\n  return { result, error };\n}\n\n\nfunction artificialDelay() {\n  let milliseconds: number = 0;\n\n  if (location.hostname === \"localhost\") {\n    milliseconds = 800;\n  }\n\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n",
    "\nexport interface Options {\n  /**\n   * Whether to show forked repos on the dashboard\n   */\n  forks: boolean;\n}\n\n/**\n * Reads and stores state in the URL hash\n */\nexport class Hash {\n  /**\n   * The accounts to show on the dashboard\n   */\n  public accounts: Set<string>;\n\n  /**\n   * Specific repos to hide\n   */\n  public hide: Set<string>;\n\n  public options: Options;\n\n  public constructor() {\n    let params = new URLSearchParams(location.hash.substr(1));\n    this.accounts = parseStringSet(params.get(\"u\"));\n    this.hide = parseStringSet(params.get(\"hide\"));\n    this.options = {\n      forks: parseBoolean(params.get(\"forks\"))\n    };\n  }\n\n  /**\n   * Updates the URL hash to include the specified GitHub account\n   */\n  public addAccount(name: string) {\n    this.accounts.add(name);\n    this._updateHash();\n  }\n\n  /**\n   * Updates the URL hash to remove the specified GitHub account\n   */\n  public removeAccount(name: string) {\n    this.accounts.delete(name);\n    this._updateHash();\n  }\n\n  /**\n   * Updates the URL hash to hide or show the specified GitHub repo\n   */\n  public toggleRepo(full_name: string, hidden: boolean) {\n    if (hidden) {\n      this.hide.add(full_name);\n    }\n    else {\n      this.hide.delete(full_name);\n    }\n    this._updateHash();\n  }\n\n  /**\n   * Updates the URL hash to with the specified options\n   */\n  public setOptions(options: Partial<Options>) {\n    Object.assign(this.options, options);\n    this._updateHash();\n  }\n\n  /**\n   * Updates the URL hash to match the properties of this object\n   */\n  private _updateHash() {\n    let params = new URLSearchParams();\n\n    if (this.accounts.size > 0) {\n      params.append(\"u\", [...this.accounts].join(\",\"));\n    }\n\n    if (this.hide.size > 0) {\n      params.append(\"hide\", [...this.hide].join(\",\"));\n    }\n\n    if (this.options.forks) {\n      params.append(\"forks\", \"yes\");\n    }\n\n    let hashString = params.toString();\n    location.hash = hashString;\n  }\n}\n\n/**\n * The singleton instance of the Hash class.\n */\nexport const hash = new Hash();\n\nfunction parseStringSet(value: string | null): Set<string> {\n  if (!value) {\n    return new Set();\n  }\n  else {\n    return new Set(value.split(\",\"));\n  }\n}\n\nfunction parseBoolean(value: string | null): boolean {\n  if (!value) {\n    return false;\n  }\n  else {\n    return [\"yes\", \"true\", \"on\", \"ok\"].includes(value.toLowerCase());\n  }\n}\n",
    "import { GitHubAccount } from \"../../github\";\nimport { fetchGitHubAccount } from \"./fetch-github-account\";\nimport { hash } from \"./hash\";\n\nexport type AddAccount = (name: string) => Promise<void>;\n\nexport type ReplaceAccount = (oldAccountID: number, newAccount: GitHubAccount) => void;\n\nexport type RemoveAccount = (id: number) => void;\n\nexport type ToggleRepo = (accountID: number, repoID: number, include: boolean) => void;\n\nexport interface AppState {\n  accounts: GitHubAccount[];\n}\n\nexport class StateStore {\n  public static mixin(obj: StateStore) {\n    let store = new StateStore();\n    obj.state = store.state;\n    obj.addAccount = store.addAccount.bind(obj);\n    obj.replaceAccount = store.replaceAccount.bind(obj);\n    obj.removeAccount = store.removeAccount.bind(obj);\n    obj.toggleRepo = store.toggleRepo.bind(obj);\n\n    // Immediately load all the accounts in the URL hash\n    for (let accountName of hash.accounts) {\n      obj.addAccount(accountName);\n    }\n  }\n\n  public state: AppState = {\n    accounts: [],\n  };\n\n  // Just here to satisfy TypeScript\n  public setState!: SetState<AppState>;\n\n  /**\n   * Adds a new GitHub account with the specified name to the accounts list,\n   * and asynchronously fetches the account info from GitHub\n   */\n  public async addAccount(name: string) {\n    // Does this account already exist\n    let account = this.state.accounts.find(byName(name));\n\n    if (account) {\n      // The account already exists\n      return;\n    }\n\n    // Create a temporary account object to populate the UI\n    // while we fetch the account info from GitHub\n    account = {\n      id: Math.random(),\n      name,\n      login: name,\n      avatar_url: \"\",\n      bio: \"\",\n      loading: true,\n      repos: [],\n    };\n\n    // Add this account to the BEGINNING of the array.\n    // This makes sure it's visible on small mobile screens.\n    let accounts = this.state.accounts.slice();\n    accounts.unshift(account);\n    this.setState({ accounts });\n\n    // Fetch the account info from GitHub and replace this temporary account\n    // object with the real info\n    await fetchGitHubAccount(account, this.replaceAccount);\n    hash.addAccount(name);\n  }\n\n  /**\n   * Replaces the specified account in the accounts list with the given GitHub account object.\n   */\n  public replaceAccount(oldAccountID: number, newAccount: GitHubAccount) {\n    let accounts = this.state.accounts.slice();\n\n    // Just to ensure we don't accidentally add duplicate accounts,\n    // remove the new account if it already exists\n    removeAccountByID(accounts, newAccount.id);\n\n    // Remove the old account, and get its index,\n    // so we can insert the new account at the same location\n    let { index } = removeAccountByID(accounts, oldAccountID);\n\n    // If the old account didn't exist, then just add new account at index zero\n    if (index === -1) {\n      index = 0;\n    }\n\n    // Add the new account at the same index as the removed account\n    accounts.splice(index, 0, newAccount);\n    this.setState({ accounts });\n  }\n\n  /**\n   * Removes the specified GitHub account from the accounts list\n   */\n  public removeAccount(id: number) {\n    let accounts = this.state.accounts.slice();\n    let { removed } = removeAccountByID(accounts, id);\n\n    if (removed) {\n      this.setState({ accounts });\n      hash.removeAccount(removed.name);\n    }\n  }\n\n  /**\n   * Toggles the \"hidden\" property of the specified GitHub repo\n   */\n  public toggleRepo(accountID: number, repoID: number, hidden: boolean) {\n    let accounts = this.state.accounts.slice();\n    let account = accounts.find(byID(accountID))!;\n    let repo = account.repos.find(byID(repoID))!;\n    repo.hidden = hidden;\n    this.setState({ accounts });\n    hash.toggleRepo(repo.full_name, hidden);\n  }\n}\n\n\n/**\n * Removes the account with the specified ID from the array.\n */\nfunction removeAccountByID(accounts: GitHubAccount[], id: number) {\n  let index = accounts.findIndex(byID(id));\n  let removed: GitHubAccount | undefined;\n\n  if (index >= 0) {\n    removed = accounts.splice(index, 1)[0];\n  }\n\n  return { index, removed };\n}\n\n/**\n * Used to search an array for object with the specified \"id\" property\n */\nfunction byID(id: number) {\n  return (obj: { id: number }) => obj.id === id;\n}\n\n/**\n * Used to search an array for object with the specified \"name\" property\n */\nfunction byName(name: string) {\n  name = name.trim().toLowerCase();\n  return (obj: { name: string }) => obj.name.trim().toLowerCase() === name;\n}\n",
    "import { AddAccount } from \"../add-account/add-account\";\nimport { FirstTimeProps } from \"./props\";\n\nexport function FirstTime(props: FirstTimeProps) {\n  let { accounts } = props;\n  let count = accounts.filter((acct) => !acct.loading).length === 0 ? \"no-accounts\" : \"has-accounts\";\n\n  return (\n    <section id=\"first_time\" className={count}>\n      <header key=\"header\">\n        <div className=\"responsive-container\">\n          <img className=\"logo\" src=\"img/logo.png\" alt=\"logo image\" />\n          <h1>GitHub Repo Health</h1>\n          <h2>See the health of all your GitHub repos on one page</h2>\n        </div>\n      </header>\n      <div className=\"responsive-container\">\n        <div className=\"welcome-message\">\n          <h3>Hi! 👋 Enter your GitHub username to get started</h3>\n          <AddAccount submitButtonText=\"Show My Repos\" {...props} />\n        </div>\n      </div>\n    </section>\n  );\n}\n",
    "import { ApiClient } from \"./api-client\";\n\n/**\n * A GitHub user or organization account, as returned from the GitHub REST API\n */\nexport interface GitHubAccountPOJO {\n  readonly id: number;\n  login: string;\n  name: string;\n  avatar_url: string;\n  bio: string;\n}\n\n/**\n * Additional GitHub account properties that we need for this app\n */\nexport interface GitHubAccount extends GitHubAccountPOJO {\n  /**\n   * This account's GitHub repos\n   */\n  repos: GitHubRepo[];\n\n  /**\n   * Indicates whether we're currently fetching the account info from GitHub\n   */\n  loading: boolean;\n\n  /**\n   * If an error occurred while fetching account info, then this is the error message\n   */\n  error?: string;\n}\n\n/**\n * A GitHub repository, as returned from the GitHub REST API\n */\nexport interface GitHubRepoPOJO {\n  readonly id: number;\n  name: string;\n  full_name: string;\n  description: string;\n  fork: boolean;\n  stargazers_count: boolean;\n}\n\n/**\n * Additional GitHub repo properties that we need for this app\n */\nexport interface GitHubRepo extends GitHubRepoPOJO {\n  /**\n   * Is this repo hidden from the dashboard?\n   */\n  hidden: boolean;\n}\n\nexport class GitHub {\n  private readonly _client: ApiClient = new ApiClient();\n\n  /**\n   * Fetches the specified GitHub account's info, NOT including its repos\n   */\n  public async fetchAccount(name: string): Promise<GitHubAccount> {\n    let accountPOJO = await this._client.fetchObject(`https://api.github.com/users/${name}`);\n\n    if (isGitHubAccountPOJO(accountPOJO)) {\n      return {\n        ...accountPOJO,\n        loading: false,\n        repos: [],\n      };\n    }\n    else {\n      throw this._client.createError(\"Invalid GitHub account object:\", accountPOJO);\n    }\n  }\n\n  /**\n   * Fetches the GitHub repos for the specified account\n   */\n  public async fetchRepos(accountName: string): Promise<GitHubRepo[]> {\n    let repoPOJOs = await this._client.fetchArray(`https://api.github.com/users/${accountName}/repos`);\n\n    if (isArrayOfGitHubRepoPOJO(repoPOJOs)) {\n      let repos: GitHubRepo[] = [];\n\n      for (let repoPOJO of repoPOJOs) {\n        repos.push({\n          ...repoPOJO,\n          hidden: false,\n        } as GitHubRepo);\n      }\n\n      return repos;\n    }\n    else {\n      throw this._client.createError(\"Invalid GitHub repos:\", repoPOJOs);\n    }\n  }\n}\n\n/**\n * Singleton instance of the GitHub API client\n */\nexport const github = new GitHub();\n\n\n// tslint:disable-next-line:no-any\nfunction isGitHubAccountPOJO(account: any): account is GitHubAccountPOJO {\n  return typeof account === \"object\" &&\n    \"login\" in account && typeof account.login === \"string\" &&\n    \"name\" in account && typeof account.name === \"string\" &&\n    \"bio\" in account && typeof account.bio === \"string\" &&\n    \"avatar_url\" in account && typeof account.avatar_url === \"string\";\n}\n\n// tslint:disable-next-line:no-any\nfunction isArrayOfGitHubRepoPOJO(repos: any[]): repos is GitHubRepoPOJO[] {\n  return repos.length > 0 &&\n    typeof repos[0] === \"object\" &&\n    typeof repos[0].name === \"string\";\n}\n",
    "import { App } from \"./components/app/app\";\n\nReactDOM.render(<App />, document.getElementById(\"react-app\"));\n"
  ]
}