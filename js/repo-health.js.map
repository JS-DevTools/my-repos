{
  "version": 3,
  "sources": [
    "..\\node_modules\\browser-pack\\_prelude.js",
    "..\\_ts\\api-client.ts",
    "..\\_ts\\components\\app\\app.tsx",
    "..\\_ts\\components\\app\\fetch-github-account.ts",
    "..\\_ts\\components\\edit-dashboard\\account-list.tsx",
    "..\\_ts\\components\\edit-dashboard\\add-account-form.tsx",
    "..\\_ts\\components\\edit-dashboard\\dialog.tsx",
    "..\\_ts\\components\\edit-dashboard\\repo-list.tsx",
    "..\\_ts\\github.ts",
    "..\\_ts\\index.tsx",
    "..\\_ts\\params.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "export interface POJO {\n  [key: string]: string | number | boolean | POJO | POJO[];\n}\n\nexport type ParsedResponseBody = string | POJO | POJO[] | undefined;\n\n/**\n * A wrapper around the Fetch API, with added error handling and automatic response parsing.\n */\nexport const apiClient = {\n  /**\n   * Returns the parsed response, or throws an error if an error response is returned\n   */\n  async fetch(input: RequestInfo, init?: RequestInit): Promise<ParsedResponseBody> {\n    let response = await fetch(input, init);\n    let parsedResponseBody = await parseResponseBody(response);\n\n    if (!response.ok) {\n      throw apiClient.createError(\n        `${getUrl(input)} returned an HTTP ${response.status} (${response.statusText || \"Error\"}) response`,\n        parsedResponseBody\n      );\n    }\n\n    return parsedResponseBody;\n  },\n\n  /**\n   * Returns the parsed response if it's a valid JSON array; otherwise, or throws an error.\n   */\n  async fetchArray(input: RequestInfo, init?: RequestInit): Promise<POJO[]> {\n    let parsedResponseBody = await apiClient.fetch(input, init);\n\n    if (!Array.isArray(parsedResponseBody)) {\n      throw apiClient.createError(\n        `${getUrl(input)} did not return a JSON array as expected`,\n        parsedResponseBody\n      );\n    }\n\n    return parsedResponseBody;\n  },\n\n  /**\n   * Returns the parsed response if it's a valid JSON object; otherwise, or throws an error.\n   */\n  async fetchObject(input: RequestInfo, init?: RequestInit): Promise<POJO> {\n    let parsedResponseBody = await apiClient.fetch(input, init);\n\n    if (typeof parsedResponseBody !== \"object\") {\n      throw apiClient.createError(\n        `${getUrl(input)} did not return a JSON object as expected`,\n        parsedResponseBody\n      );\n    }\n    else if (Array.isArray(parsedResponseBody)) {\n      throw apiClient.createError(\n        `${getUrl(input)} returned a JSON array, but a JSON object was expected`,\n        parsedResponseBody\n      );\n    }\n\n    return parsedResponseBody;\n  },\n\n  /**\n   * Creates an Error with the specified message, including the parsed response body\n   */\n  createError(message: string, parsedResponseBody: ParsedResponseBody): Error {\n    return new Error(message + \"\\n\" + JSON.stringify(parsedResponseBody, undefined, 2));\n  },\n};\n\n/**\n * Returns the URL from the given RequestInfo value\n */\nfunction getUrl(input: RequestInfo): string {\n  return typeof input === \"string\" ? input : input.url;\n}\n\n/**\n * Tries to parse the response as JSON, but falls back to text if that fails\n */\nasync function parseResponseBody(response: Response): Promise<ParsedResponseBody> {\n  let responseBody: string;\n\n  try {\n    responseBody = await response.text();\n  }\n  catch (error) {\n    // The response could not be read\n    return undefined;\n  }\n\n  try {\n    // Try to parse the response as JSON\n    let parsedResponseBody = JSON.parse(responseBody);\n\n    if (typeof parsedResponseBody === \"object\") {\n      // Return the parsed object or array\n      return parsedResponseBody;\n    }\n    else {\n      // Coerce the result to a string\n      return String(parsedResponseBody);\n    }\n  }\n  catch (error) {\n    // The response couldn't be parsed as JSON, so just return it as a string\n    return responseBody;\n  }\n}\n",
    "import { GitHubAccount } from \"../../github\";\nimport { EditDashboardDialog } from \"../edit-dashboard/dialog\";\nimport { fetchGitHubAccount } from \"./fetch-github-account\";\n\nexport interface AppState {\n  accounts: GitHubAccount[];\n  selectedAccount?: GitHubAccount;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  public readonly state: AppState = {\n    accounts: [],\n    selectedAccount: undefined,\n  };\n\n  public render() {\n    return [\n      // @ts-ignore - TypeScript doesn't support React componnents that return arrays\n      <EditDashboardDialog key=\"dialog\"\n        getAccount={this.getAccount}\n        addAccount={this.addAccount}\n        removeAccount={this.removeAccount}\n        selectAccount={this.selectAccount}\n        toggleRepo={this.toggleRepo}\n        {...this.state}\n      />,\n    ];\n  }\n\n  private getAccount = (id: number) => this.state.accounts.find(byID(id));\n\n  private addAccount = (name: string) => {\n    // Does this account already exist\n    let account = this.state.accounts.find(byName(name));\n\n    if (account) {\n      // The account already exists, so just select it\n      return this.selectAccount(account.id);\n    }\n\n    // Create a temporary account object to populate the UI\n    // while we fetch the account info from GitHub\n    account = {\n      id: Math.random(),\n      name,\n      login: name,\n      avatar_url: \"\",\n      bio: \"\",\n      repos: [],\n    };\n\n    // Add this account to the BEGINNING of the array.\n    // This makes sure it's visible on small mobile screens.\n    let accounts = this.state.accounts.slice();\n    accounts.unshift(account);\n    this.setState({ accounts, selectedAccount: account });\n\n    // Fetch the account info from GitHub and replace this temporary account\n    // object with the real info\n    fetchGitHubAccount(account, this.replaceAccount);\n  }\n\n  private replaceAccount = (oldAccountID: number, newAccount: GitHubAccount) => {\n    let accounts = this.state.accounts.slice();\n\n    // Just to ensure we don't accidentally add duplicate accounts,\n    // remove the new account if it already exists\n    removeByID(accounts, newAccount.id);\n\n    // Remove the old account, and get its index,\n    // so we can insert the new account at the same location\n    let index = removeByID(accounts, oldAccountID);\n\n    // If the old account didn't exist, then just add new account at index zero\n    if (index === -1) {\n      index = 0;\n    }\n\n    // Add the new account at the same index as the removed account\n    accounts.splice(index, 0, newAccount);\n    this.setState({ accounts, selectedAccount: newAccount });\n  }\n\n  private removeAccount = (id: number) => {\n    let accounts = this.state.accounts.slice();\n    let index = removeByID(accounts, id);\n\n    if (index >= 0) {\n      this.setState({ accounts });\n    }\n  }\n\n  private selectAccount = (id: number) => {\n    let account = this.state.accounts.find(byID(id));\n    if (account) {\n      this.setState({ selectedAccount: account });\n    }\n  }\n\n  private toggleRepo = (accountID: number, repoID: number, include: boolean) => {\n    let accounts = this.state.accounts.slice();\n    let account = accounts.find(byID(accountID))!;\n    let repo = account.repos.find(byID(repoID))!;\n    repo.include = include;\n    this.setState({ accounts });\n  }\n}\n\nfunction removeByID(array: Array<{ id: number }>, id: number): number {\n  let index = array.findIndex(byID(id));\n\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n\n  return index;\n}\n\nfunction byID(id: number) {\n  return (obj: { id: number }) => obj.id === id;\n}\n\nfunction byName(name: string) {\n  name = name.trim().toLowerCase();\n  return (obj: { name: string }) => obj.name.trim().toLowerCase() === name;\n}\n",
    "import { github, GitHubAccount, GitHubAccountPOJO } from \"../../github\";\n\ntype ReplaceAccountCallback = (oldAccountID: number, newAccount: GitHubAccount) => void;\n\n/**\n * Fetches the specified GitHub account and its repos, and then calls the given callback function\n * to update the app state.\n */\nexport async function fetchGitHubAccount(accountPOJO: GitHubAccountPOJO, replaceAccount: ReplaceAccountCallback) {\n  // Fetch the GitHub account and repos at the same time\n  let safeResults = await Promise.all([\n    safeResolve(github.fetchAccount(accountPOJO.login)),\n    safeResolve(github.fetchRepos(accountPOJO.login)),\n    artificialDelay(),\n  ]);\n\n  // @ts-ignore - This line totally confuses the TypeScript compiler\n  let [{ result: account, error: accountError }, { result: repos, error: repoError }] = safeResults;\n\n  if (accountError) {\n    // An error occurred while fetching the account, so create a dummy account\n    // with the error message\n    account = {\n      ...accountPOJO,\n      repos: [],\n      error: accountError.message,\n    };\n  }\n  else if (account && repoError) {\n    // An error occurred while fetching the repos, so add the error message to the account\n    account.error = repoError.message;\n  }\n  else if (account && repos) {\n    // Everything succeeded, so add the repos to the account\n    account.repos = repos;\n  }\n\n  replaceAccount(accountPOJO.id, account!);\n}\n\n\nasync function safeResolve<T>(promise: Promise<T>): Promise<{ result?: T; error?: Error }> {\n  let result, error;\n\n  try {\n    result = await promise;\n  }\n  catch (err) {\n    error = err;\n  }\n\n  return { result, error };\n}\n\n\nfunction artificialDelay() {\n  let milliseconds: number = 0;\n\n  if (location.hostname === \"localhost\") {\n    milliseconds = 800;\n  }\n\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n",
    "import { MouseEvent } from \"react\";\nimport { GitHubAccount } from \"../../github\";\nimport { Props } from \"./props\";\nimport { RepoList } from \"./repo-list\";\n\nexport function AccountsAndRepos(props: Props) {\n  let { accounts } = props;\n  let count = accounts.length === 0 ? \"empty\" : accounts.length === 1 ? \"one\" : \"multiple\";\n\n  return (\n    <div id=\"accounts_and_repos\" className={count}>\n      <ul className=\"account-list\">\n        {accounts.map((account) => <AccountItem account={account} {...props} />)}\n      </ul>\n      {accounts.map((account) => <RepoList account={account} {...props} />)}\n    </div>\n  );\n}\n\ninterface AccountItemProps extends Props {\n  account: GitHubAccount;\n}\n\nclass AccountItem extends React.Component<AccountItemProps, object> {\n  public render() {\n    let { account, selectedAccount } = this.props;\n\n    return (\n      <li key={account.id} className={account === selectedAccount ? \"account selected\" : \"account\"}>\n        <a className=\"account-name\" data-key={account.id} onClick={this.handleAccountClick}>\n          {account.avatar_url && <img src={account.avatar_url} className=\"avatar\" />}\n          {account.name}\n        </a>\n      </li>\n    );\n  }\n\n  private handleAccountClick = (event: MouseEvent) => {\n    let key = (event.currentTarget as HTMLElement).dataset.key!;\n    this.props.selectAccount(parseFloat(key));\n  }\n}\n",
    "import { ChangeEvent, FormEvent } from \"react\";\n\ninterface Props {\n  addAccount(name: string): void;\n}\n\ninterface State {\n  accountName: string;\n}\n\nexport class AddAccountForm extends React.Component<Props, State> {\n  public readonly state: State = {\n    accountName: \"\",\n  };\n\n  public render() {\n    return (\n      <form id=\"add_account_form\" onSubmit={this.handleSubmit}>\n        <div className=\"clearfix\">\n          <dl className=\"form-group\">\n            <dt className=\"input-label\">\n              <label htmlFor=\"repo_owner\">GitHub Username</label>\n            </dt>\n            <dd className=\"input-field\">\n              <input type=\"text\" name=\"account_name\" className=\"form-control short\"\n                maxLength={100} autoFocus autoCapitalize=\"off\" autoComplete=\"on\" spellCheck={false}\n                value={this.state.accountName} onChange={this.handleChange} />\n            </dd>\n          </dl>\n\n          <button type=\"submit\" className=\"btn btn-primary\">Add</button>\n        </div>\n      </form>\n    );\n  }\n\n  private handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ accountName: event.target.value });\n  }\n\n  private handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.state.accountName) {\n      this.props.addAccount(this.state.accountName.trim());\n      this.setState({ accountName: \"\" });\n    }\n  }\n}\n",
    "import { params } from \"../../params\";\nimport { AccountsAndRepos } from \"./account-list\";\nimport { AddAccountForm } from \"./add-account-form\";\nimport { Props } from \"./props\";\n\nexport function EditDashboardDialog(props: Props) {\n  return [\n    <dialog key=\"dialog\" open className={props.accounts.length === 0 ? \"open empty\" : \"open\"}>\n      <header className=\"dialog-header\">\n        <img className=\"logo\" src=\"img/logo.png\" alt=\"logo image\" />\n        <h1>GitHub Repo Health</h1>\n        <h2>See the health of all your GitHub repos on one page</h2>\n      </header>\n      <div className=\"dialog-body\">\n        <h3>{getTitle()}</h3>\n        <AddAccountForm addAccount={props.addAccount} />\n        <AccountsAndRepos {...props} />\n      </div>\n\n      <footer className=\"dialog-footer\">\n        <button type=\"button\" disabled className=\"btn\">Cancel</button>\n        <button type=\"button\" disabled className=\"btn btn-primary\">Create My Dashboard</button>\n      </footer>\n    </dialog>,\n\n    <div key=\"backdrop\" className=\"backdrop\"></div>\n  ];\n}\n\nfunction getTitle(): string {\n  if (params.isNew) {\n    return \"Hi! 👋 Enter your GitHub username below to get started\";\n  }\n  else {\n    return \"Edit Your Dashboard\";\n  }\n}\n",
    "import { GitHubAccount, GitHubRepo } from \"../../github\";\nimport { Props } from \"./props\";\n\ninterface RepoListProps extends Props {\n  account: GitHubAccount;\n}\n\nexport function RepoList(props: RepoListProps) {\n  let { account, selectedAccount } = props;\n\n  return (\n    <section className={account === selectedAccount ? \"repo-list-container selected\" : \"repo-list-container\"}>\n      <header>\n        <h3 className=\"account-name\">\n          {account.avatar_url && <img src={account.avatar_url} className=\"avatar\" />}\n          {account.name}\n        </h3>\n      </header>\n      <RepoListContents {...props} />\n    </section>\n  );\n}\n\nfunction RepoListContents(props: RepoListProps) {\n  let { account } = props;\n\n  if (account.repos.length > 0) {\n    return (\n      <ul className=\"repo-list\">\n        {account.repos.map((repo) => <RepoItem repo={repo} {...props} />)}\n      </ul>\n    );\n  }\n  else if (account.error) {\n    return (\n      <div className=\"repo-list error\">\n        <div className=\"error-message\">{account.error}</div>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"repo-list loading\">\n        <div className=\"loading-message\">Loading...</div>\n      </div>\n    );\n  }\n}\n\ninterface RepoItemProps extends RepoListProps {\n  repo: GitHubRepo;\n}\n\nclass RepoItem extends React.Component<RepoItemProps, object> {\n  public render() {\n    let { repo } = this.props;\n\n    return (\n      <li key={repo.id} className=\"repo\">\n        {repo.name}\n      </li>\n    );\n  }\n}\n",
    "import { apiClient } from \"./api-client\";\n\n/**\n * A GitHub user or organization account, as returned from the GitHub REST API\n */\nexport interface GitHubAccountPOJO {\n  readonly id: number;\n  login: string;\n  name: string;\n  avatar_url: string;\n  bio: string;\n}\n\n/**\n * Additional GitHub account properties that we need for this app\n */\nexport interface GitHubAccount extends GitHubAccountPOJO {\n  /**\n   * This account's GitHub repos\n   */\n  repos: GitHubRepo[];\n\n  /**\n   * If an error occurred while fetching account info, then this is the error message\n   */\n  error?: string;\n}\n\n/**\n * A GitHub repository, as returned from the GitHub REST API\n */\nexport interface GitHubRepoPOJO {\n  readonly id: number;\n  name: string;\n  full_name: string;\n  description: string;\n  fork: boolean;\n  stargazers_count: boolean;\n}\n\n/**\n * Additional GitHub repo properties that we need for this app\n */\nexport interface GitHubRepo extends GitHubRepoPOJO {\n  /**\n   * Should this repo be included in the dashboard?\n   */\n  include: boolean;\n}\n\nexport const github = {\n  /**\n   * Fetches the specified GitHub account's info, NOT including its repos\n   */\n  async fetchAccount(name: string): Promise<GitHubAccount> {\n    let accountPOJO = await apiClient.fetchObject(`https://api.github.com/users/${name}`);\n\n    if (isGitHubAccountPOJO(accountPOJO)) {\n      return {\n        ...accountPOJO,\n        repos: [],\n      };\n    }\n    else {\n      throw apiClient.createError(\"Invalid GitHub account object:\", accountPOJO);\n    }\n  },\n\n  /**\n   * Fetches the GitHub repos for the specified account\n   */\n  async fetchRepos(accountName: string): Promise<GitHubRepo[]> {\n    let repoPOJOs = await apiClient.fetchArray(`https://api.github.com/users/${accountName}/repos`);\n\n    if (isArrayOfGitHubRepoPOJO(repoPOJOs)) {\n      let repos: GitHubRepo[] = [];\n\n      for (let repoPOJO of repoPOJOs) {\n        repos.push({ ...repoPOJO, include: true } as GitHubRepo);\n      }\n\n      return repos;\n    }\n    else {\n      throw apiClient.createError(\"Invalid GitHub repos:\", repoPOJOs);\n    }\n  },\n};\n\n// tslint:disable-next-line:no-any\nfunction isGitHubAccountPOJO(account: any): account is GitHubAccountPOJO {\n  return typeof account === \"object\" &&\n    \"login\" in account && typeof account.login === \"string\" &&\n    \"name\" in account && typeof account.name === \"string\" &&\n    \"bio\" in account && typeof account.bio === \"string\" &&\n    \"avatar_url\" in account && typeof account.avatar_url === \"string\";\n}\n\n// tslint:disable-next-line:no-any\nfunction isArrayOfGitHubRepoPOJO(repos: any[]): repos is GitHubRepoPOJO[] {\n  return repos.length > 0 &&\n    typeof repos[0] === \"object\" &&\n    typeof repos[0].name === \"string\";\n}\n",
    "import { App } from \"./components/app/app\";\n\nReactDOM.render(<App />, document.getElementById(\"react-app\"));\n",
    "class Params {\n  public isNew: boolean;\n  private _query = new URLSearchParams(location.search);\n\n\n  public constructor() {\n    // If the params are empty when the page first loads, then we're building a new dashboard,\n    // rather than showing or editing an existing one\n    this.isNew = this.isEmpty;\n  }\n\n\n  public get isEmpty(): boolean {\n    return !this._query.has(\"include\");\n  }\n\n\n  public toString() {\n    this._query.sort();\n    return this._query.toString();\n  }\n}\n\n/**\n * Singleton reference to the page's query params\n */\nexport const params = new Params();\n"
  ]
}