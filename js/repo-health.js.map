{
  "version": 3,
  "sources": [
    "..\\node_modules\\browser-pack\\_prelude.js",
    "..\\_ts\\components\\app\\app.tsx",
    "..\\_ts\\components\\edit-dashboard\\account-list.tsx",
    "..\\_ts\\components\\edit-dashboard\\add-account-form.tsx",
    "..\\_ts\\components\\edit-dashboard\\dialog.tsx",
    "..\\_ts\\index.tsx",
    "..\\_ts\\params.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import { EditDashboardDialog } from \"../edit-dashboard/dialog\";\nimport { AppState } from \"./state\";\n\nconst dummyAccounts = [\n  {\n    id: \"jamesmessinger\",\n    name: \"JamesMessinger\",\n    repos: [\n      { id: \"some-repo\", name: \"some-repo\", include: true },\n      { id: \"some-other-repo\", name: \"some-other-repo\", include: true },\n      { id: \"yet-another-repo\", name: \"yet-another-repo\", include: true },\n      { id: \"my-repo\", name: \"my-repo\", include: true },\n    ]\n  },\n  {\n    id: \"apidevtools\",\n    name: \"APIDevTools\",\n    repos: [\n      { id: \"swagger-parser\", name: \"swagger-parser\", include: true },\n      { id: \"json-schema-ref-parser\", name: \"json-schema-ref-parser\", include: true },\n      { id: \"swagger-express-middleware\", name: \"swagger-express-middleware\", include: true },\n      { id: \"swagger-cli\", name: \"swagger-cli\", include: true },\n      { id: \"swagger-parser-3\", name: \"swagger-parser-3\", include: true },\n      { id: \"json-schema-ref-parser-3\", name: \"json-schema-ref-parser-3\", include: true },\n      { id: \"swagger-express-middleware-3\", name: \"swagger-express-middleware-3\", include: true },\n      { id: \"swagger-cli-3\", name: \"swagger-cli-3\", include: true },\n      { id: \"swagger-parser-2\", name: \"swagger-parser-2\", include: true },\n      { id: \"json-schema-ref-parser-2\", name: \"json-schema-ref-parser-2\", include: true },\n      { id: \"swagger-express-middleware-2\", name: \"swagger-express-middleware-2\", include: true },\n      { id: \"swagger-cli-2\", name: \"swagger-cli-2\", include: true },\n    ]\n  },\n  {\n    id: \"js-devtools\",\n    name: \"JS-DevTools\",\n    repos: [\n      { id: \"simplifyify\", name: \"simplifyify\", include: true },\n      { id: \"ono\", name: \"ono\", include: true },\n      { id: \"version-bump-promt\", name: \"version-bump-promt\", include: true },\n      { id: \"karma-host-environment\", name: \"karma-host-environment\", include: true },\n    ]\n  },\n];\n\n\nexport class App extends React.Component<{}, AppState> {\n  public readonly state: AppState = {\n    accounts: dummyAccounts,\n  };\n\n  public render() {\n    return [\n      <EditDashboardDialog key=\"dialog\"\n        accounts={this.state.accounts}\n        getAccount={this.getAccount}\n        addAccount={this.addAccount}\n        removeAccount={this.removeAccount}\n        toggleRepo={this.toggleRepo}\n      />,\n    ];\n  }\n\n  private getAccount = (id: string) => this.state.accounts.find(byID(id));\n\n  private addAccount = (name: string) => {\n    let id = createId(name);\n    let account = this.getAccount(id);\n    let accounts = this.state.accounts.slice();\n\n    if (!account) {\n      // Add this account to the BEGINNING of the array.\n      // This makes sure it's visible on small mobile screens.\n      account = { id, name, repos: [] };\n      accounts.unshift(account);\n      this.setState({ accounts });\n    }\n\n    return id;\n  }\n\n  private removeAccount = (id: string) => {\n    let accounts = this.state.accounts.slice();\n    let index = accounts.findIndex(byID(id));\n\n    if (index >= 0) {\n      accounts.splice(index, 1);\n      this.setState({ accounts });\n    }\n  }\n\n  private toggleRepo = (accountID: string, repoID: string, include: boolean) => {\n    let accounts = this.state.accounts.slice();\n    let account = accounts.find(byID(accountID))!;\n    let repo = account.repos.find(byID(repoID))!;\n    repo.include = include;\n    this.setState({ accounts });\n  }\n}\n\nfunction createId(name: string): string {\n  return name.trim().toLowerCase();\n}\n\nfunction byID(id: string) {\n  return (obj: { id: string }) => obj.id === id;\n}\n",
    "import { MouseEvent } from \"react\";\nimport { GitHubAccount, GitHubRepo } from \"../app/state\";\n\ninterface AccountListProps {\n  accounts: GitHubAccount[];\n  selectedAccountID: string;\n  selectAccount(id: string): void;\n  removeAccount(id: string): void;\n  toggleRepo(accountID: string, repoID: string, include: boolean): void;\n}\n\nexport function AccountList(props: AccountListProps) {\n  let { accounts } = props;\n\n  return (\n    <div id=\"edit_account_list\" className={accounts.length === 0 ? \"empty\" : \"\"}>\n      <ul className=\"account-list\">\n        {accounts.map((account) => <AccountItem account={account} {...props} />)}\n      </ul>\n      {accounts.map((account) => <RepoList account={account} {...props} />)}\n    </div>\n  );\n}\n\ninterface AccountItemProps extends AccountListProps {\n  account: GitHubAccount;\n}\n\nclass AccountItem extends React.Component<AccountItemProps, object> {\n  public render() {\n    let { account, selectedAccountID } = this.props;\n\n    return (\n      <li key={account.id} className={account.id === selectedAccountID ? \"account selected\" : \"account\"}>\n        <a data-key={account.id} onClick={this.handleAccountClick}>\n          {account.name}\n        </a>\n      </li>\n    );\n  }\n\n  private handleAccountClick = (event: MouseEvent) => {\n    let key = (event.target as HTMLElement).dataset.key!;\n    this.props.selectAccount(key);\n  }\n}\n\ninterface RepoListProps extends AccountListProps {\n  account: GitHubAccount;\n}\n\nfunction RepoList(props: RepoListProps) {\n  let { account, selectedAccountID } = props;\n\n  return (\n    <section className={account.id === selectedAccountID ? \"repo-list selected\" : \"repo-list\"}>\n      <header>\n        <h3>{account.name}</h3>\n      </header>\n      <ul>\n        {account.repos.map((repo) => <RepoItem repo={repo} {...props} />)}\n      </ul>\n    </section>\n  );\n}\n\ninterface RepoItemProps extends RepoListProps {\n  repo: GitHubRepo;\n}\n\nclass RepoItem extends React.Component<RepoItemProps, object> {\n  public render() {\n    let { repo } = this.props;\n\n    return (\n      <li key={repo.id} className=\"repo\">\n        {repo.name}\n      </li>\n    );\n  }\n}\n",
    "import { ChangeEvent, FormEvent } from \"react\";\n\ninterface Props {\n  addAccount(name: string): void;\n}\n\ninterface State {\n  accountName: string;\n}\n\nexport class AddAccountForm extends React.Component<Props, State> {\n  public readonly state: State = {\n    accountName: \"\",\n  };\n\n  public render() {\n    return (\n      <form id=\"add_account_form\" onSubmit={this.handleSubmit}>\n        <div className=\"clearfix\">\n          <dl className=\"form-group\">\n            <dt className=\"input-label\">\n              <label htmlFor=\"repo_owner\">GitHub Username</label>\n            </dt>\n            <dd className=\"input-field\">\n              <input type=\"text\" name=\"account_name\" className=\"form-control short\"\n                maxLength={100} autoFocus autoCapitalize=\"off\" autoComplete=\"off\" spellCheck={false}\n                value={this.state.accountName} onChange={this.handleChange} />\n            </dd>\n          </dl>\n\n          <button type=\"submit\" className=\"btn btn-primary\">Add</button>\n        </div>\n      </form>\n    );\n  }\n\n  private handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({ accountName: event.target.value });\n  }\n\n  private handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (this.state.accountName) {\n      this.props.addAccount(this.state.accountName.trim());\n      this.setState({ accountName: \"\" });\n    }\n  }\n}\n",
    "import { params } from \"../../params\";\nimport { GitHubAccount } from \"../app/state\";\nimport { AccountList } from \"./account-list\";\nimport { AddAccountForm } from \"./add-account-form\";\n\ninterface Props {\n  accounts: GitHubAccount[];\n  getAccount(id: string): GitHubAccount | undefined;\n  addAccount(name: string): string;\n  removeAccount(id: string): void;\n  toggleRepo(accountName: string, repoName: string, include: boolean): void;\n}\n\ninterface State {\n  selectedAccountID: string;\n}\n\nexport class EditDashboardDialog extends React.Component<Props, State> {\n  public readonly state: State = {\n    selectedAccountID: \"apidevtools\",\n  };\n\n  public render() {\n    return [\n      <dialog key=\"dialog\" open className={this.props.accounts.length === 0 ? \"open empty\" : \"open\"}>\n        <header className=\"dialog-header\">\n          <img className=\"logo\" src=\"img/logo.png\" alt=\"logo image\" />\n          <h1>GitHub Repo Health</h1>\n          <h2>See the health of all your GitHub repos on one page</h2>\n        </header>\n        <div className=\"dialog-body\">\n          <h3>{getTitle()}</h3>\n          <AddAccountForm addAccount={this.addAccount} />\n          <AccountList\n            accounts={this.props.accounts}\n            selectedAccountID={this.state.selectedAccountID}\n            selectAccount={this.selectAccount}\n            removeAccount={this.props.removeAccount}\n            toggleRepo={this.props.toggleRepo}\n          />\n        </div>\n\n        <footer className=\"dialog-footer\">\n          <button type=\"button\" disabled className=\"btn\">Cancel</button>\n          <button type=\"button\" disabled className=\"btn btn-primary\">Create My Dashboard</button>\n        </footer>\n      </dialog>,\n\n      <div key=\"backdrop\" className=\"backdrop\"></div>\n    ];\n  }\n\n  private addAccount = (name: string) => {\n    let id = this.props.addAccount(name);\n    this.selectAccount(id);\n  }\n\n  private selectAccount = (id: string) => {\n    this.setState({ selectedAccountID: id });\n  }\n}\n\nfunction getTitle(): string {\n  if (params.isNew) {\n    return \"Hi! 👋 Enter your GitHub username below to get started\";\n  }\n  else {\n    return \"Edit Your Dashboard\";\n  }\n}\n",
    "import { App } from \"./components/app/app\";\n\nReactDOM.render(<App />, document.getElementById(\"react-app\"));\n",
    "class Params {\n  public isNew: boolean;\n  private _query = new URLSearchParams(location.search);\n\n\n  public constructor() {\n    // If the params are empty when the page first loads, then we're building a new dashboard,\n    // rather than showing or editing an existing one\n    this.isNew = this.isEmpty;\n  }\n\n\n  public get isEmpty(): boolean {\n    return !this._query.has(\"include\");\n  }\n\n\n  public toString() {\n    this._query.sort();\n    return this._query.toString();\n  }\n}\n\n/**\n * Singleton reference to the page's query params\n */\nexport const params = new Params();\n"
  ]
}