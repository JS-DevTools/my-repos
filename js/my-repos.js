/*!
 * My Repos v0.2.1 (November 16th 2018)
 * 
 * https://myrepos.io/
 * 
 * @author  James Messinger (https://jamesmessinger.com)
 * @license MIT
 */
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const state_store_1=require("./state-store"),util_1=require("./util");class ApiClient{async fetch(t,e){let[r]=await Promise.all([await fetchWithFallback(t,e),artificialDelay()]),a=await parseResponseBody(r);if(!r.ok)throw this.createError(`${getUrl(t)} returned an HTTP ${r.status} (${r.statusText||"Error"}) response`,a);return await cacheResponse(t,r),a}async fetchArray(t,e){let r=await this.fetch(t,e);if(!Array.isArray(r))throw this.createError(`${getUrl(t)} did not return a JSON array as expected`,r);return r}async fetchObject(t,e){let r=await this.fetch(t,e);if("object"!=typeof r)throw this.createError(`${getUrl(t)} did not return a JSON object as expected`,r);if(Array.isArray(r))throw this.createError(`${getUrl(t)} returned a JSON array, but a JSON object was expected`,r);return r}createError(t,e){return new Error(t+"\n"+JSON.stringify(e,void 0,2))}}async function fetchWithFallback(t,e){let r,a;util_1.LOCAL_DEV_MODE?(r=fetchFromCache,a=fetch):(r=fetch,a=fetchFromCache);let s=await r(t,e);return s.ok?s:a(t,e)}async function fetchFromCache(t){let e={status:503,statusText:"Service Unavailable",headers:{"Content-Type":"text/plain","Content-Length":"0"},body:""},r=localStorage.getItem(getUrl(t));if(r)try{e=JSON.parse(r)}catch(t){e.body=t.message}return new Response(e.body,e)}async function cacheResponse(t,e){let r={status:e.status,statusText:e.statusText,headers:util_1.mapToPOJO(e.headers),body:await e.clone().text()};localStorage.setItem(getUrl(t),JSON.stringify(r,void 0,2))}function getUrl(t){return"string"==typeof t?t:t.url}async function parseResponseBody(t){let e;try{e=await t.clone().text()}catch(t){return}try{let t=JSON.parse(e);return"object"==typeof t?t:String(t)}catch(t){return e}}async function artificialDelay(){let t=0;state_store_1.stateStore.state.delay&&(t=util_1.random(0,state_store_1.stateStore.state.delay)),await new Promise(e=>setTimeout(e,t))}exports.ApiClient=ApiClient},{"./state-store":17,"./util":19}],2:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const repo_list_1=require("./repo-list");function AccountItem(e){let{account:t}=e;return React.createElement("section",{key:t.login,className:"account"},React.createElement("header",null,React.createElement("h1",null,React.createElement("a",{href:t.html_url},t.avatar_url&&React.createElement("img",{src:t.avatar_url,className:"avatar"}),t.name))),React.createElement(AccountItemContents,Object.assign({},e)))}function AccountItemContents(e){let{account:t}=e;return t.repos.length>0?React.createElement(repo_list_1.RepoList,{account:t}):t.error?React.createElement("div",{className:"error"},React.createElement("div",{className:"error-message"},t.error)):t.loading?React.createElement("div",{className:"loading"},React.createElement("div",{className:"loading-message"},"Loading...")):React.createElement("div",{className:"no-repos"},React.createElement("div",{className:"empty-message"},"There are no repos to show"))}exports.AccountItem=AccountItem},{"./repo-list":8}],3:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const state_store_1=require("../state-store"),util_1=require("../util"),account_item_1=require("./account-item");function AccountList(){let{accounts:t}=state_store_1.stateStore.state;return React.createElement("main",{id:"account_list",className:util_1.accountCountCssClass(t)},React.createElement("div",{className:"responsive-container"},t.map(t=>React.createElement(account_item_1.AccountItem,{account:t}))))}exports.AccountList=AccountList},{"../state-store":17,"../util":19,"./account-item":2}],4:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const state_store_1=require("../state-store");class AddAccount extends React.Component{constructor(){super(...arguments),this.state={login:"",busy:!1},this.handleChange=(e=>{this.setState({login:e.target.value})}),this.handleSubmit=(async e=>{e.preventDefault(),this.state.login&&(this.setState({busy:!0}),await state_store_1.stateStore.addAccount(this.state.login),this.setState({login:"",busy:!1}))})}render(){let{submitButtonText:e}=this.props,{login:t,busy:a}=this.state;return React.createElement("form",{className:`add-account form ${a?"busy":""}`,onSubmit:this.handleSubmit},React.createElement("dl",{className:"form-group"},React.createElement("dt",{className:"input-label"},React.createElement("label",{htmlFor:"repo_owner"},"GitHub Username")),React.createElement("dd",{className:"input-field"},React.createElement("input",{type:"text",name:"account_name",className:"form-control short",maxLength:100,autoFocus:!0,autoCapitalize:"off",autoComplete:"on",spellCheck:!1,placeholder:"GitHub Username",disabled:a,value:t,onChange:this.handleChange}))),React.createElement("button",{type:"submit",className:"btn btn-primary",disabled:a},e||"Add"))}}exports.AddAccount=AddAccount},{"../state-store":17}],5:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const state_store_1=require("../state-store"),account_list_1=require("./account-list"),first_time_1=require("./first-time"),page_header_1=require("./page-header");class App extends React.Component{constructor(e){super(e),this.state=state_store_1.stateStore.state,state_store_1.stateStore.onStateChange(e=>this.setState(e.detail.state,e.detail.callback))}render(){return[React.createElement(page_header_1.PageHeader,{key:"page_header"}),React.createElement(account_list_1.AccountList,{key:"account_list"}),React.createElement(first_time_1.FirstTime,{key:"first_time"})]}}exports.App=App},{"../state-store":17,"./account-list":3,"./first-time":6,"./page-header":7}],6:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const state_store_1=require("../state-store"),util_1=require("../util"),add_account_1=require("./add-account");function FirstTime(){let{accounts:e}=state_store_1.stateStore.state;return React.createElement("aside",{id:"first_time",className:util_1.accountCountCssClass(e)},React.createElement("div",{className:"responsive-container"},React.createElement("div",{className:"welcome-message"},React.createElement("h3",null,"Hi! ðŸ‘‹ Enter your GitHub username to get started"),React.createElement(add_account_1.AddAccount,{submitButtonText:"Show My Repos"}))))}exports.FirstTime=FirstTime},{"../state-store":17,"../util":19,"./add-account":4}],7:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const state_store_1=require("../state-store"),util_1=require("../util"),add_account_1=require("./add-account");function PageHeader(){let{accounts:e}=state_store_1.stateStore.state;return React.createElement("header",{id:"page_header",className:util_1.accountCountCssClass(e)},React.createElement("div",{className:"responsive-container"},React.createElement("img",{className:"logo",src:"img/logo.png",alt:"logo image"}),React.createElement("h1",null,"My GitHub Repos"),React.createElement("h2",null,"All your GitHub repos on one page"),React.createElement(add_account_1.AddAccount,null)))}exports.PageHeader=PageHeader},{"../state-store":17,"../util":19,"./add-account":4}],8:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const state_store_1=require("../state-store");function RepoList(e){let{account:a}=e,t=a.repos.filter(e=>!state_store_1.stateStore.isHidden(e));return React.createElement("ul",{className:"repo-list"},t.map(a=>React.createElement(RepoItem,Object.assign({repo:a},e))))}function RepoItem(e){let{repo:a}=e;return React.createElement("li",{key:a.name,className:`repo ${a.fork?"forked":""} ${a.archived?"archived":""}`},React.createElement("h2",null,React.createElement("a",{href:a.html_url},a.name)),a.description&&React.createElement("h3",null,a.description),React.createElement("nav",{className:"badges"},React.createElement("a",{href:`${a.html_url}/network/members`,className:`badge ${a.forks_count?"badge-ok":""} forks`},React.createElement("i",{className:"glyphicon glyphicon-cutlery"}),React.createElement("span",{className:"badge-label"},"Forks"),React.createElement("span",{className:"badge-count"},a.forks_count)),React.createElement("a",{href:`${a.html_url}/stargazers`,className:`badge ${a.stargazers_count?"badge-ok":""} stars`},React.createElement("i",{className:"glyphicon glyphicon-star"}),React.createElement("span",{className:"badge-label"},"Stars"),React.createElement("span",{className:"badge-count"},a.stargazers_count)),React.createElement("a",{href:`${a.html_url}/watchers`,className:`badge ${a.watchers_count?"badge-ok":""} watchers`},React.createElement("i",{className:"glyphicon glyphicon-eye-open"}),React.createElement("span",{className:"badge-label"},"Watchers"),React.createElement("span",{className:"badge-count"},a.watchers_count)),React.createElement("a",{href:`${a.html_url}/issues`,className:`badge ${a.open_issues_count?"badge-warning":"badge-ok"} issues`},React.createElement("i",{className:"glyphicon glyphicon-fire"}),React.createElement("span",{className:"badge-label"},"Issues"),React.createElement("span",{className:"badge-count"},a.open_issues_count)),DependencyBadge(e)))}function DependencyBadge(e){let a,t,c,{repo:s}=e;return s.dependencies.out_of_date?(a=!0,t="Out of Date",c=s.dependencies.out_of_date):s.dependencies.advisories?(a=!0,t="Insecure",c=s.dependencies.advisories):(a=!1,t="Up-to-Date",c=s.dependencies.up_to_date),React.createElement("a",{href:s.dependencies.html_url,className:`badge ${a?"badge-error":"badge-ok"} dependencies`},React.createElement("i",{className:"glyphicon glyphicon-calendar"}),React.createElement("span",{className:"badge-label"},t),React.createElement("span",{className:"badge-count"},`${c} / ${s.dependencies.total}`))}exports.RepoList=RepoList},{"../state-store":17}],9:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class GitHubAccount{constructor(t={}){this.login="",this.name="",this.avatar_url="",this.bio="",this.html_url="",this.repos=[],this.loading=!1,this.loaded=!1,Object.assign(this,t)}}function isGitHubAccountPOJO(t){return"object"==typeof t&&"login"in t&&"string"==typeof t.login&&"name"in t&&"string"==typeof t.name&&"bio"in t&&"string"==typeof t.bio&&"avatar_url"in t&&"string"==typeof t.avatar_url}exports.GitHubAccount=GitHubAccount,exports.isGitHubAccountPOJO=isGitHubAccountPOJO},{}],10:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class GitHubRepo{constructor(t){if(this.name="",this.full_name="",this.description="",this.archived=!1,this.fork=!1,this.forks_count=0,this.stargazers_count=0,this.watchers_count=0,this.open_issues_count=0,this.html_url="",this.dependencies={total:0,out_of_date:0,up_to_date:0,advisories:0,html_url:""},!t.account)throw new Error(`No parent account was specified for GitHub repo "${t.name}"`);this.account=t.account,Object.assign(this,t)}}function isArrayOfGitHubRepoPOJO(t){return t.length>0&&"object"==typeof t[0]&&"string"==typeof t[0].name}exports.GitHubRepo=GitHubRepo,exports.isArrayOfGitHubRepoPOJO=isArrayOfGitHubRepoPOJO},{}],11:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const api_client_1=require("../api-client"),github_account_1=require("./github-account"),github_repo_1=require("./github-repo");class GitHub{constructor(){this._client=new api_client_1.ApiClient}async fetchAccount(t){let e=await this._client.fetchObject(`https://api.github.com/users/${t.login}`);if(github_account_1.isGitHubAccountPOJO(e))return new github_account_1.GitHubAccount({...e,loading:!1,loaded:!0,repos:[]});throw this._client.createError("Invalid GitHub account:",e)}async fetchRepos(t){let e=await this._client.fetchArray(`https://api.github.com/users/${t.login}/repos`);if(github_repo_1.isArrayOfGitHubRepoPOJO(e)){let i=[];for(let c of e)i.push(new github_repo_1.GitHubRepo({...c,account:t}));return i}throw this._client.createError("Invalid GitHub repo:",e)}}exports.GitHub=GitHub},{"../api-client":1,"./github-account":9,"./github-repo":10}],12:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const github_1=require("./github");exports.github=new github_1.GitHub},{"./github":11}],13:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const app_1=require("./components/app");ReactDOM.render(React.createElement(app_1.App,null),document.body)},{"./components/app":5}],14:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const util_1=require("../util");class AppState{constructor(e={}){this.accounts=e.accounts?e.accounts.slice():[],this.hiddenRepos=e.hiddenRepos?new Set(e.hiddenRepos):new Set,this.showForks=Boolean(e.showForks),this.showArchived=Boolean(e.showArchived),this.delay=e.delay||util_1.DEFAULT_DELAY}}exports.AppState=AppState},{"../util":19}],15:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const github_1=require("../github"),github_account_1=require("../github/github-account");async function fetchGitHubAccount(t,e){let u=await Promise.all([safeResolve(github_1.github.fetchAccount(t)),safeResolve(github_1.github.fetchRepos(t))]),[{result:c,error:r},{result:o,error:i}]=u;r?t=new github_account_1.GitHubAccount({...t,error:r.message}):(t=new github_account_1.GitHubAccount(c),i?t.error=i.message:t.repos=o),e(t)}async function safeResolve(t){let e,u;try{e=await t}catch(t){u=t}return{result:e,error:u}}exports.fetchGitHubAccount=fetchGitHubAccount},{"../github":12,"../github/github-account":9}],16:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const github_account_1=require("../github/github-account"),util_1=require("../util");function writeStateToHash(e){let t=stateToHash(e);t!==location.hash.substr(1)&&(location.hash=t)}function readStateFromHash(){return hashToState(location.hash.substr(1))}function hashMatchesState(e){return location.hash.substr(1)===stateToHash(e)}function stateToHash(e){let t=new URLSearchParams;e.accounts&&e.accounts.length>0&&t.append("u",e.accounts.map(util_1.getLogin).join(",")),e.hiddenRepos&&e.hiddenRepos.size>0&&t.append("hide",[...e.hiddenRepos].sort().join(",")),e.showForks&&t.append("forks","yes"),e.showArchived&&t.append("archived","yes"),e.delay!==util_1.DEFAULT_DELAY&&t.append("delay",String(e.delay));let a=t.toString();return a=(a=a.replace(/%2C/g,",")).replace(/%2F/g,"/")}function hashToState(e){let t=new URLSearchParams(e);return{accounts:parseAccounts(t.get("u")),hiddenRepos:parseStringSet(t.get("hide")),showForks:parseBoolean(t.get("forks")),showArchived:parseBoolean(t.get("archived")),delay:parsePositiveInteger(t.get("delay"),util_1.DEFAULT_DELAY)}}function parseAccounts(e){let t=parseStringSet(e),a=[];for(let e of t.values())a.push(new github_account_1.GitHubAccount({login:e,name:e}));return a}function parseStringSet(e){e=e?e.trim():"";let t=new Set;if(e){let a=e.split(",");for(let e of a)(e=e.trim()).length>0&&t.add(e)}return t}function parseBoolean(e,t=!1){e=e?e.trim():"";let a=["yes","true","on","ok","show"].includes(e.toLowerCase());return a===t?t:a}function parseNumber(e,t=0){e=e?e.trim():"";let a=parseFloat(e);return isNaN(a)||a===t?t:a}function parseInteger(e,t=0){let a=parseNumber(e=e?e.trim():"",t);return(a=Number.isSafeInteger(a)?a:Math.round(a))===t?t:a}function parsePositiveInteger(e,t=0){let a=parseInteger(e=e?e.trim():"",t);return a<0||a===t?t:a}exports.writeStateToHash=writeStateToHash,exports.readStateFromHash=readStateFromHash,exports.hashMatchesState=hashMatchesState},{"../github/github-account":9,"../util":19}],17:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const state_store_1=require("./state-store");exports.stateStore=new state_store_1.StateStore},{"./state-store":18}],18:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const github_account_1=require("../github/github-account"),app_state_1=require("./app-state"),fetch_github_account_1=require("./fetch-github-account"),hash_1=require("./hash"),hashchange="hashchange",statechange="statechange";class StateStore extends EventTarget{constructor(){super(),this.state=new app_state_1.AppState,this.syncWithHash(),window.addEventListener(hashchange,()=>this.syncWithHash())}onStateChange(t){this.addEventListener(statechange,t)}setState(t,e){Object.assign(this.state,t);let s=new CustomEvent(statechange,{detail:{state:this.state,callback:()=>{hash_1.writeStateToHash(this.state),e&&e()}}});this.dispatchEvent(s)}syncWithHash(){if(hash_1.hashMatchesState(this.state))return;let t=hash_1.readStateFromHash();if(t.accounts){let e=t.accounts;t.accounts=[];for(let s of e){let e=this.getAccount(s.login);e?t.accounts.push(e):(t.accounts.push(s),fetch_github_account_1.fetchGitHubAccount(s,t=>this.updateAccount(t)))}}this.setState(t)}hasAccount(t){return"object"==typeof t&&(t=t.login),Boolean(this.getAccount(t))}getAccount(t){return this.state.accounts.find(byLogin(t))}async addAccount(t){if(t=t.trim(),this.hasAccount(t))return;let e=new github_account_1.GitHubAccount({login:t,name:t,loading:!0}),s=this.state.accounts.slice();s.push(e),this.setState({accounts:s}),await fetch_github_account_1.fetchGitHubAccount(e,t=>this.updateAccount(t))}updateAccount(t){let e=this.state.accounts.slice(),s=e.findIndex(byLogin(t.login));s>=0&&(e.splice(s,1,t),this.setState({accounts:e}))}removeAccount(t){let e=this.state.accounts.slice(),s=e.findIndex(byLogin(t.login));s>=0&&(e.splice(s,1),this.setState({accounts:e}))}toggleHidden(t,e){let s=new Set(this.state.hiddenRepos);e?s.add(t.full_name):s.delete(t.full_name),this.setState({hiddenRepos:s})}isHidden(t){return!!this.state.hiddenRepos.has(t.full_name)||(!(!t.fork||this.state.showForks)||!(!t.archived||this.state.showArchived))}}function byLogin(t){return t=t.trim().toLowerCase(),e=>e.login.trim().toLowerCase()===t}exports.StateStore=StateStore},{"../github/github-account":9,"./app-state":14,"./fetch-github-account":15,"./hash":16}],19:[function(require,module,exports){"use strict";function mapToPOJO(t){let o={};for(let[n,e]of t.entries())o[n.toString()]=e;return o}function random(t,o){return t=Math.ceil(t),o=Math.floor(o),Math.floor(Math.random()*(o-t+1))+t}function accountCountCssClass(t){switch(t.length){case 0:return"no-accounts";case 1:return"has-accounts has-one-account";default:return"has-accounts has-multiple-accounts"}}function getLogin(t){return t.login}Object.defineProperty(exports,"__esModule",{value:!0}),exports.LOCAL_DEV_MODE="localhost"===location.hostname,exports.DEFAULT_DELAY=exports.LOCAL_DEV_MODE?1e3:0,exports.mapToPOJO=mapToPOJO,exports.random=random,exports.accountCountCssClass=accountCountCssClass,exports.getLogin=getLogin},{}]},{},[13]);
//# sourceMappingURL=my-repos.js.map
//# sourceMappingURL=my-repos.js.map